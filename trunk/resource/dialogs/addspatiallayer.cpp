/////////////////////////////////////////////////////////////////////////////
// Name:        addspatiallayer.cpp
// Purpose:     
// Author:      Lucien Schreiber
// Modified by: 
// Created:     Tue 21 Aug 14:06:29 2007
// RCS-ID:      
// Copyright:   (c) CREALP 2007
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), Tue 21 Aug 14:06:29 2007

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "addspatiallayer.h"

////@begin XPM images
////@end XPM images


/*!
 * wxDialog type definition
 */

IMPLEMENT_DYNAMIC_CLASS( wxDialog, wxDialog )


/*!
 * wxDialog event table definition
 */

BEGIN_EVENT_TABLE( wxDialog, wxDialog )

////@begin wxDialog event table entries
////@end wxDialog event table entries

END_EVENT_TABLE()


/*!
 * wxDialog constructors
 */

wxDialog::wxDialog()
{
    Init();
}

wxDialog::wxDialog( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*!
 * wxDialog creator
 */

bool wxDialog::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin wxDialog creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end wxDialog creation
    return true;
}


/*!
 * wxDialog destructor
 */

wxDialog::~wxDialog()
{
////@begin wxDialog destruction
////@end wxDialog destruction
}


/*!
 * Member initialisation
 */

void wxDialog::Init()
{
////@begin wxDialog member initialisation
////@end wxDialog member initialisation
}


/*!
 * Control creation for wxDialog
 */

void wxDialog::CreateControls()
{    
////@begin wxDialog content construction
    // Generated by DialogBlocks, Mon 12 Nov 13:40:22 2007 (Personal Edition)

    wxDialog* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    wxStaticBox* itemStaticBoxSizer3Static = new wxStaticBox(itemDialog1, wxID_ANY, _("Layer options"));
    wxStaticBoxSizer* itemStaticBoxSizer3 = new wxStaticBoxSizer(itemStaticBoxSizer3Static, wxVERTICAL);
    itemBoxSizer2->Add(itemStaticBoxSizer3, 0, wxGROW|wxALL, 5);

    wxFlexGridSizer* itemFlexGridSizer4 = new wxFlexGridSizer(2, 2, 0, 0);
    itemFlexGridSizer4->AddGrowableCol(1);
    itemStaticBoxSizer3->Add(itemFlexGridSizer4, 0, wxGROW|wxALL, 5);

    wxStaticText* itemStaticText5 = new wxStaticText( itemDialog1, wxID_STATIC, _("Layer type :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer4->Add(itemStaticText5, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString itemChoice6Strings;
    itemChoice6Strings.Add(_("Point"));
    itemChoice6Strings.Add(_("Line"));
    itemChoice6Strings.Add(_("Polygon"));
    wxChoice* itemChoice6 = new wxChoice( itemDialog1, ID_CHOICE, wxDefaultPosition, wxDefaultSize, itemChoice6Strings, 0 );
    itemChoice6->SetStringSelection(_("Point"));
    itemFlexGridSizer4->Add(itemChoice6, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText7 = new wxStaticText( itemDialog1, wxID_STATIC, _("Layer name :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer4->Add(itemStaticText7, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxTextCtrl* itemTextCtrl8 = new wxTextCtrl( itemDialog1, ID_TEXTCTRL, _T(""), wxDefaultPosition, wxSize(200, -1), 0 );
    itemFlexGridSizer4->Add(itemTextCtrl8, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxNotebook* itemNotebook9 = new wxNotebook( itemDialog1, ID_NOTEBOOK, wxDefaultPosition, wxDefaultSize, wxBK_DEFAULT );

    wxPanel* itemPanel10 = new wxPanel( itemNotebook9, ID_PANEL, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxStaticBox* itemStaticBoxSizer11Static = new wxStaticBox(itemPanel10, wxID_ANY, _("Object description"));
    wxStaticBoxSizer* itemStaticBoxSizer11 = new wxStaticBoxSizer(itemStaticBoxSizer11Static, wxVERTICAL);
    itemPanel10->SetSizer(itemStaticBoxSizer11);

    wxListCtrl* itemListCtrl12 = new wxListCtrl( itemPanel10, ID_LISTCTRL2, wxDefaultPosition, wxSize(100, 100), wxLC_REPORT );
    itemStaticBoxSizer11->Add(itemListCtrl12, 1, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer13 = new wxBoxSizer(wxHORIZONTAL);
    itemStaticBoxSizer11->Add(itemBoxSizer13, 0, wxALIGN_LEFT|wxALL, 5);
    wxToggleButton* itemToggleButton14 = new wxToggleButton( itemPanel10, ID_TOGGLEBUTTON7, _("+"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemToggleButton14->SetValue(false);
    itemBoxSizer13->Add(itemToggleButton14, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    wxToggleButton* itemToggleButton15 = new wxToggleButton( itemPanel10, ID_TOGGLEBUTTON8, _("-"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemToggleButton15->SetValue(false);
    itemBoxSizer13->Add(itemToggleButton15, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    wxToggleButton* itemToggleButton16 = new wxToggleButton( itemPanel10, ID_TOGGLEBUTTON28, _("Import"), wxDefaultPosition, wxDefaultSize, 0 );
    itemToggleButton16->SetValue(false);
    itemBoxSizer13->Add(itemToggleButton16, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    itemNotebook9->AddPage(itemPanel10, _("Objects"));

    wxPanel* itemPanel17 = new wxPanel( itemNotebook9, ID_PANEL1, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxStaticBox* itemStaticBoxSizer18Static = new wxStaticBox(itemPanel17, wxID_ANY, _("Optional layer fileds"));
    wxStaticBoxSizer* itemStaticBoxSizer18 = new wxStaticBoxSizer(itemStaticBoxSizer18Static, wxVERTICAL);
    itemPanel17->SetSizer(itemStaticBoxSizer18);

    wxListCtrl* itemListCtrl19 = new wxListCtrl( itemPanel17, ID_LISTCTRL, wxDefaultPosition, wxSize(100, 200), wxLC_REPORT );
    itemStaticBoxSizer18->Add(itemListCtrl19, 1, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer20 = new wxBoxSizer(wxHORIZONTAL);
    itemStaticBoxSizer18->Add(itemBoxSizer20, 0, wxALIGN_LEFT|wxALL, 5);
    wxToggleButton* itemToggleButton21 = new wxToggleButton( itemPanel17, ID_TOGGLEBUTTON, _("+"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemToggleButton21->SetValue(false);
    itemBoxSizer20->Add(itemToggleButton21, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    wxToggleButton* itemToggleButton22 = new wxToggleButton( itemPanel17, ID_TOGGLEBUTTON1, _("-"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemToggleButton22->SetValue(false);
    itemBoxSizer20->Add(itemToggleButton22, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    itemNotebook9->AddPage(itemPanel17, _("Fields"));

    itemBoxSizer2->Add(itemNotebook9, 1, wxGROW|wxALL, 5);

    wxStdDialogButtonSizer* itemStdDialogButtonSizer23 = new wxStdDialogButtonSizer;

    itemBoxSizer2->Add(itemStdDialogButtonSizer23, 0, wxALIGN_RIGHT|wxALL, 5);
    wxButton* itemButton24 = new wxButton( itemDialog1, wxID_OK, _("&OK"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer23->AddButton(itemButton24);

    wxButton* itemButton25 = new wxButton( itemDialog1, wxID_CANCEL, _("&Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer23->AddButton(itemButton25);

    itemStdDialogButtonSizer23->Realize();

////@end wxDialog content construction
}


/*!
 * Should we show tooltips?
 */

bool wxDialog::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap wxDialog::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin wxDialog bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end wxDialog bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon wxDialog::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin wxDialog icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end wxDialog icon retrieval
}
