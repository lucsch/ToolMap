/////////////////////////////////////////////////////////////////////////////
// Name:        linessymbology.cpp
// Purpose:     
// Author:      Lucien Schreiber
// Modified by: 
// Created:     Wed 22 Aug 14:09:53 2007
// RCS-ID:      
// Copyright:   (c) CREALP 2007
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), Wed 22 Aug 14:09:53 2007

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "linessymbology.h"

////@begin XPM images
////@end XPM images


/*!
 * Linessymbology type definition
 */

IMPLEMENT_DYNAMIC_CLASS( Linessymbology, wxDialog )


/*!
 * Linessymbology event table definition
 */

BEGIN_EVENT_TABLE( Linessymbology, wxDialog )

////@begin Linessymbology event table entries
////@end Linessymbology event table entries

END_EVENT_TABLE()


/*!
 * Linessymbology constructors
 */

Linessymbology::Linessymbology()
{
    Init();
}

Linessymbology::Linessymbology( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*!
 * Linessymbology creator
 */

bool Linessymbology::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin Linessymbology creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end Linessymbology creation
    return true;
}


/*!
 * Linessymbology destructor
 */

Linessymbology::~Linessymbology()
{
////@begin Linessymbology destruction
////@end Linessymbology destruction
}


/*!
 * Member initialisation
 */

void Linessymbology::Init()
{
////@begin Linessymbology member initialisation
////@end Linessymbology member initialisation
}


/*!
 * Control creation for Linessymbology
 */

void Linessymbology::CreateControls()
{    
////@begin Linessymbology content construction
    // Generated by DialogBlocks, Thu 18 Oct 10:35:47 2007 (Personal Edition)

    Linessymbology* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    wxNotebook* itemNotebook3 = new wxNotebook( itemDialog1, ID_NOTEBOOK5, wxDefaultPosition, wxDefaultSize, wxBK_DEFAULT );

    wxPanel* itemPanel4 = new wxPanel( itemNotebook3, ID_PANEL11, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
    wxFlexGridSizer* itemFlexGridSizer5 = new wxFlexGridSizer(3, 2, 0, 0);
    itemFlexGridSizer5->AddGrowableCol(1);
    itemPanel4->SetSizer(itemFlexGridSizer5);

    wxStaticText* itemStaticText6 = new wxStaticText( itemPanel4, wxID_STATIC, _("Color :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer5->Add(itemStaticText6, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton7 = new wxButton( itemPanel4, ID_BUTTON12, _("Button"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer5->Add(itemButton7, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText8 = new wxStaticText( itemPanel4, wxID_STATIC, _("Shape :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer5->Add(itemStaticText8, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString itemChoice9Strings;
    itemChoice9Strings.Add(_("----------"));
    itemChoice9Strings.Add(_("..............."));
    wxChoice* itemChoice9 = new wxChoice( itemPanel4, ID_CHOICE4, wxDefaultPosition, wxDefaultSize, itemChoice9Strings, 0 );
    itemFlexGridSizer5->Add(itemChoice9, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText10 = new wxStaticText( itemPanel4, wxID_STATIC, _("Width :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer5->Add(itemStaticText10, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxSpinCtrl* itemSpinCtrl11 = new wxSpinCtrl( itemPanel4, ID_SPINCTRL3, _T("0"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100, 0 );
    itemFlexGridSizer5->Add(itemSpinCtrl11, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemNotebook3->AddPage(itemPanel4, _("Unique"));

    wxPanel* itemPanel12 = new wxPanel( itemNotebook3, ID_PANEL12, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
    wxBoxSizer* itemBoxSizer13 = new wxBoxSizer(wxVERTICAL);
    itemPanel12->SetSizer(itemBoxSizer13);

    wxBoxSizer* itemBoxSizer14 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer13->Add(itemBoxSizer14, 0, wxGROW|wxALL, 5);
    wxStaticText* itemStaticText15 = new wxStaticText( itemPanel12, wxID_STATIC, _("Field :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer14->Add(itemStaticText15, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString itemChoice16Strings;
    wxChoice* itemChoice16 = new wxChoice( itemPanel12, ID_CHOICE5, wxDefaultPosition, wxDefaultSize, itemChoice16Strings, 0 );
    itemBoxSizer14->Add(itemChoice16, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxListCtrl* itemListCtrl17 = new wxListCtrl( itemPanel12, ID_LISTCTRL5, wxDefaultPosition, wxSize(100, 100), wxLC_REPORT );
    itemBoxSizer13->Add(itemListCtrl17, 1, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer18 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer13->Add(itemBoxSizer18, 0, wxGROW|wxALL, 5);
    wxToggleButton* itemToggleButton19 = new wxToggleButton( itemPanel12, ID_TOGGLEBUTTON16, _("+"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemToggleButton19->SetValue(false);
    itemBoxSizer18->Add(itemToggleButton19, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxToggleButton* itemToggleButton20 = new wxToggleButton( itemPanel12, ID_TOGGLEBUTTON17, _("-"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemToggleButton20->SetValue(false);
    itemBoxSizer18->Add(itemToggleButton20, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxToggleButton* itemToggleButton21 = new wxToggleButton( itemPanel12, ID_TOGGLEBUTTON18, _("Add all"), wxDefaultPosition, wxDefaultSize, 0 );
    itemToggleButton21->SetValue(false);
    itemBoxSizer18->Add(itemToggleButton21, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxFlexGridSizer* itemFlexGridSizer22 = new wxFlexGridSizer(2, 2, 0, 0);
    itemFlexGridSizer22->AddGrowableCol(1);
    itemBoxSizer13->Add(itemFlexGridSizer22, 0, wxGROW, 5);
    wxStaticText* itemStaticText23 = new wxStaticText( itemPanel12, wxID_STATIC, _("Shape :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer22->Add(itemStaticText23, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString itemChoice24Strings;
    itemChoice24Strings.Add(_("----------"));
    itemChoice24Strings.Add(_("..............."));
    wxChoice* itemChoice24 = new wxChoice( itemPanel12, ID_CHOICE, wxDefaultPosition, wxDefaultSize, itemChoice24Strings, 0 );
    itemFlexGridSizer22->Add(itemChoice24, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText25 = new wxStaticText( itemPanel12, wxID_STATIC, _("Width :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer22->Add(itemStaticText25, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxSpinCtrl* itemSpinCtrl26 = new wxSpinCtrl( itemPanel12, ID_SPINCTRL, _T("0"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100, 0 );
    itemFlexGridSizer22->Add(itemSpinCtrl26, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemNotebook3->AddPage(itemPanel12, _("Discrete"));

    wxPanel* itemPanel27 = new wxPanel( itemNotebook3, ID_PANEL13, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
    wxFlexGridSizer* itemFlexGridSizer28 = new wxFlexGridSizer(5, 2, 0, 0);
    itemFlexGridSizer28->AddGrowableCol(1);
    itemPanel27->SetSizer(itemFlexGridSizer28);

    wxStaticText* itemStaticText29 = new wxStaticText( itemPanel27, wxID_STATIC, _("Field :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer28->Add(itemStaticText29, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString itemChoice30Strings;
    wxChoice* itemChoice30 = new wxChoice( itemPanel27, ID_CHOICE6, wxDefaultPosition, wxDefaultSize, itemChoice30Strings, 0 );
    itemFlexGridSizer28->Add(itemChoice30, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText31 = new wxStaticText( itemPanel27, wxID_STATIC, _("Starting color :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer28->Add(itemStaticText31, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton32 = new wxButton( itemPanel27, ID_BUTTON15, _("Button"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer28->Add(itemButton32, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText33 = new wxStaticText( itemPanel27, wxID_STATIC, _("Ending color"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer28->Add(itemStaticText33, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton34 = new wxButton( itemPanel27, ID_BUTTON16, _("Button"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer28->Add(itemButton34, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText35 = new wxStaticText( itemPanel27, wxID_STATIC, _("Shape :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer28->Add(itemStaticText35, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString itemChoice36Strings;
    wxChoice* itemChoice36 = new wxChoice( itemPanel27, ID_CHOICE7, wxDefaultPosition, wxDefaultSize, itemChoice36Strings, 0 );
    itemFlexGridSizer28->Add(itemChoice36, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText37 = new wxStaticText( itemPanel27, wxID_STATIC, _("Width :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer28->Add(itemStaticText37, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxSpinCtrl* itemSpinCtrl38 = new wxSpinCtrl( itemPanel27, ID_SPINCTRL4, _T("0"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100, 0 );
    itemFlexGridSizer28->Add(itemSpinCtrl38, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemNotebook3->AddPage(itemPanel27, _("Continuous"));

    itemBoxSizer2->Add(itemNotebook3, 1, wxGROW|wxALL, 5);

    wxStaticBox* itemStaticBoxSizer39Static = new wxStaticBox(itemDialog1, wxID_ANY, _("Transparency"));
    wxStaticBoxSizer* itemStaticBoxSizer39 = new wxStaticBoxSizer(itemStaticBoxSizer39Static, wxHORIZONTAL);
    itemBoxSizer2->Add(itemStaticBoxSizer39, 0, wxGROW|wxALL, 5);

    wxSlider* itemSlider40 = new wxSlider( itemDialog1, ID_SLIDER1, 0, 0, 100, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL );
    itemStaticBoxSizer39->Add(itemSlider40, 1, wxGROW|wxALL, 5);

    wxTextCtrl* itemTextCtrl41 = new wxTextCtrl( itemDialog1, ID_TEXTCTRL10, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemStaticBoxSizer39->Add(itemTextCtrl41, 0, wxGROW|wxALL, 5);

    wxStdDialogButtonSizer* itemStdDialogButtonSizer42 = new wxStdDialogButtonSizer;

    itemBoxSizer2->Add(itemStdDialogButtonSizer42, 0, wxALIGN_RIGHT|wxALL, 5);
    wxButton* itemButton43 = new wxButton( itemDialog1, wxID_OK, _("&OK"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer42->AddButton(itemButton43);

    wxButton* itemButton44 = new wxButton( itemDialog1, wxID_CANCEL, _("&Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer42->AddButton(itemButton44);

    itemStdDialogButtonSizer42->Realize();

////@end Linessymbology content construction
}


/*!
 * Should we show tooltips?
 */

bool Linessymbology::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap Linessymbology::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin Linessymbology bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end Linessymbology bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon Linessymbology::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin Linessymbology icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end Linessymbology icon retrieval
}
