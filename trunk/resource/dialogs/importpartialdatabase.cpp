/////////////////////////////////////////////////////////////////////////////
// Name:        importpartialdatabase.cpp
// Purpose:     
// Author:      Lucien Schreiber
// Modified by: 
// Created:     Tue  9 Oct 09:11:47 2007
// RCS-ID:      
// Copyright:   (c) CREALP 2007
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), Tue 9 Oct 09:11:47 2007

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "importpartialdatabase.h"

////@begin XPM images
////@end XPM images


/*!
 * Importpartialdatabase type definition
 */

IMPLEMENT_DYNAMIC_CLASS( Importpartialdatabase, wxDialog )


/*!
 * Importpartialdatabase event table definition
 */

BEGIN_EVENT_TABLE( Importpartialdatabase, wxDialog )

////@begin Importpartialdatabase event table entries
////@end Importpartialdatabase event table entries

END_EVENT_TABLE()


/*!
 * Importpartialdatabase constructors
 */

Importpartialdatabase::Importpartialdatabase()
{
    Init();
}

Importpartialdatabase::Importpartialdatabase( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*!
 * Importpartialdatabase creator
 */

bool Importpartialdatabase::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin Importpartialdatabase creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end Importpartialdatabase creation
    return true;
}


/*!
 * Importpartialdatabase destructor
 */

Importpartialdatabase::~Importpartialdatabase()
{
////@begin Importpartialdatabase destruction
////@end Importpartialdatabase destruction
}


/*!
 * Member initialisation
 */

void Importpartialdatabase::Init()
{
////@begin Importpartialdatabase member initialisation
////@end Importpartialdatabase member initialisation
}


/*!
 * Control creation for Importpartialdatabase
 */

void Importpartialdatabase::CreateControls()
{    
////@begin Importpartialdatabase content construction
    // Generated by DialogBlocks, Tue 9 Oct 13:54:55 2007 (Personal Edition)

    Importpartialdatabase* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    wxStaticBox* itemStaticBoxSizer3Static = new wxStaticBox(itemDialog1, wxID_ANY, _("Usage"));
    wxStaticBoxSizer* itemStaticBoxSizer3 = new wxStaticBoxSizer(itemStaticBoxSizer3Static, wxVERTICAL);
    itemBoxSizer2->Add(itemStaticBoxSizer3, 0, wxGROW|wxALL, 5);

    wxStaticText* itemStaticText4 = new wxStaticText( itemDialog1, wxID_STATIC, _("Database will be used for :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStaticBoxSizer3->Add(itemStaticText4, 0, wxALIGN_LEFT|wxALL, 5);

    wxArrayString itemChoice5Strings;
    itemChoice5Strings.Add(_("Lines"));
    itemChoice5Strings.Add(_("Points"));
    itemChoice5Strings.Add(_("Polygons"));
    wxChoice* itemChoice5 = new wxChoice( itemDialog1, ID_CHOICE15, wxDefaultPosition, wxDefaultSize, itemChoice5Strings, 0 );
    itemChoice5->SetStringSelection(_("Polygons"));
    itemStaticBoxSizer3->Add(itemChoice5, 0, wxGROW|wxALL, 5);

    wxStaticBox* itemStaticBoxSizer6Static = new wxStaticBox(itemDialog1, wxID_ANY, _("Import SQL database"));
    wxStaticBoxSizer* itemStaticBoxSizer6 = new wxStaticBoxSizer(itemStaticBoxSizer6Static, wxVERTICAL);
    itemBoxSizer2->Add(itemStaticBoxSizer6, 1, wxGROW|wxALL, 5);

    wxStaticText* itemStaticText7 = new wxStaticText( itemDialog1, wxID_STATIC, _("Select the sql file to import"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStaticBoxSizer6->Add(itemStaticText7, 0, wxALIGN_LEFT|wxALL, 5);

    wxBoxSizer* itemBoxSizer8 = new wxBoxSizer(wxHORIZONTAL);
    itemStaticBoxSizer6->Add(itemBoxSizer8, 0, wxGROW|wxALL, 5);

    wxTextCtrl* itemTextCtrl9 = new wxTextCtrl( itemDialog1, ID_TEXTCTRL22, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer8->Add(itemTextCtrl9, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton10 = new wxButton( itemDialog1, ID_BUTTON35, _("..."), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer8->Add(itemButton10, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxCheckBox* itemCheckBox11 = new wxCheckBox( itemDialog1, ID_CHECKBOX8, _("Edit attribution table after import"), wxDefaultPosition, wxDefaultSize, 0 );
    itemCheckBox11->SetValue(false);
    itemBoxSizer2->Add(itemCheckBox11, 0, wxGROW|wxALL, 5);

    wxStdDialogButtonSizer* itemStdDialogButtonSizer12 = new wxStdDialogButtonSizer;

    itemBoxSizer2->Add(itemStdDialogButtonSizer12, 0, wxALIGN_RIGHT|wxLEFT|wxTOP|wxBOTTOM, 5);
    wxButton* itemButton13 = new wxButton( itemDialog1, wxID_OK, _("&Import"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer12->AddButton(itemButton13);

    wxButton* itemButton14 = new wxButton( itemDialog1, wxID_CANCEL, _("&Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer12->AddButton(itemButton14);

    itemStdDialogButtonSizer12->Realize();

////@end Importpartialdatabase content construction
}


/*!
 * Should we show tooltips?
 */

bool Importpartialdatabase::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap Importpartialdatabase::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin Importpartialdatabase bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end Importpartialdatabase bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon Importpartialdatabase::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin Importpartialdatabase icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end Importpartialdatabase icon retrieval
}
