/////////////////////////////////////////////////////////////////////////////
// Name:        addfield.cpp
// Purpose:     
// Author:      Lucien Schreiber
// Modified by: 
// Created:     Mon 20 Aug 15:04:17 2007
// RCS-ID:      
// Copyright:   (c) CREALP 2007
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), Mon 20 Aug 15:04:17 2007

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "addfield.h"

////@begin XPM images
////@end XPM images


/*!
 * wxDialog type definition
 */

IMPLEMENT_DYNAMIC_CLASS( wxDialog, wxDialog )


/*!
 * wxDialog event table definition
 */

BEGIN_EVENT_TABLE( wxDialog, wxDialog )

////@begin wxDialog event table entries
////@end wxDialog event table entries

END_EVENT_TABLE()


/*!
 * wxDialog constructors
 */

wxDialog::wxDialog()
{
    Init();
}

wxDialog::wxDialog( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*!
 * wxDialog creator
 */

bool wxDialog::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin wxDialog creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end wxDialog creation
    return true;
}


/*!
 * wxDialog destructor
 */

wxDialog::~wxDialog()
{
////@begin wxDialog destruction
////@end wxDialog destruction
}


/*!
 * Member initialisation
 */

void wxDialog::Init()
{
////@begin wxDialog member initialisation
////@end wxDialog member initialisation
}


/*!
 * Control creation for wxDialog
 */

void wxDialog::CreateControls()
{    
////@begin wxDialog content construction
    // Generated by DialogBlocks, Tue 30 Oct 15:12:40 2007 (Personal Edition)

    wxDialog* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    wxBoxSizer* itemBoxSizer3 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer2->Add(itemBoxSizer3, 0, wxGROW|wxALL, 5);

    wxStaticText* itemStaticText4 = new wxStaticText( itemDialog1, wxID_STATIC, _("Field name :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer3->Add(itemStaticText4, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxTextCtrl* itemTextCtrl5 = new wxTextCtrl( itemDialog1, ID_TEXTCTRL4, _T(""), wxDefaultPosition, wxSize(200, -1), 0 );
    itemBoxSizer3->Add(itemTextCtrl5, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticBox* itemStaticBoxSizer6Static = new wxStaticBox(itemDialog1, wxID_ANY, _("Field properties"));
    wxStaticBoxSizer* itemStaticBoxSizer6 = new wxStaticBoxSizer(itemStaticBoxSizer6Static, wxVERTICAL);
    itemBoxSizer2->Add(itemStaticBoxSizer6, 0, wxGROW|wxALL, 5);

    wxFlexGridSizer* itemFlexGridSizer7 = new wxFlexGridSizer(4, 2, 0, 0);
    itemFlexGridSizer7->AddGrowableCol(1);
    itemStaticBoxSizer6->Add(itemFlexGridSizer7, 0, wxGROW, 5);

    wxStaticText* itemStaticText8 = new wxStaticText( itemDialog1, wxID_STATIC, _("Data Type :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemStaticText8, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString itemChoice9Strings;
    itemChoice9Strings.Add(_("Integer"));
    itemChoice9Strings.Add(_("Float"));
    itemChoice9Strings.Add(_("Text"));
    itemChoice9Strings.Add(_("Date"));
    wxChoice* itemChoice9 = new wxChoice( itemDialog1, ID_CHOICE2, wxDefaultPosition, wxDefaultSize, itemChoice9Strings, 0 );
    itemChoice9->SetStringSelection(_("Text"));
    itemFlexGridSizer7->Add(itemChoice9, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText10 = new wxStaticText( itemDialog1, wxID_STATIC, _("Field precision :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemStaticText10, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxSpinCtrl* itemSpinCtrl11 = new wxSpinCtrl( itemDialog1, ID_SPINCTRL1, _T("0"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100, 0 );
    itemFlexGridSizer7->Add(itemSpinCtrl11, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText12 = new wxStaticText( itemDialog1, wxID_STATIC, _("Field scale :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemStaticText12, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxSpinCtrl* itemSpinCtrl13 = new wxSpinCtrl( itemDialog1, ID_SPINCTRL2, _T("0"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100, 0 );
    itemFlexGridSizer7->Add(itemSpinCtrl13, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText14 = new wxStaticText( itemDialog1, wxID_STATIC, _("Result sample :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemStaticText14, 0, wxALIGN_LEFT|wxALIGN_TOP|wxALL, 5);

    wxTextCtrl* itemTextCtrl15 = new wxTextCtrl( itemDialog1, ID_TEXTCTRL5, _T(""), wxDefaultPosition, wxDefaultSize, wxTE_CENTRE );
    itemFlexGridSizer7->Add(itemTextCtrl15, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxCheckBox* itemCheckBox16 = new wxCheckBox( itemDialog1, ID_CHECKBOX4, _("Orientation field"), wxDefaultPosition, wxDefaultSize, 0 );
    itemCheckBox16->SetValue(false);
    itemFlexGridSizer7->Add(itemCheckBox16, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5);

    wxCheckBox* itemCheckBox17 = new wxCheckBox( itemDialog1, ID_CHECKBOX2, _("Constrain allowed values"), wxDefaultPosition, wxDefaultSize, 0 );
    itemCheckBox17->SetValue(false);
    itemBoxSizer2->Add(itemCheckBox17, 0, wxGROW|wxALL, 5);

    wxNotebook* itemNotebook18 = new wxNotebook( itemDialog1, ID_NOTEBOOK, wxDefaultPosition, wxDefaultSize, wxBK_DEFAULT );

    wxPanel* itemPanel19 = new wxPanel( itemNotebook18, ID_PANEL16, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxStaticBox* itemStaticBoxSizer20Static = new wxStaticBox(itemPanel19, wxID_ANY, _("Allowed values"));
    wxStaticBoxSizer* itemStaticBoxSizer20 = new wxStaticBoxSizer(itemStaticBoxSizer20Static, wxVERTICAL);
    itemPanel19->SetSizer(itemStaticBoxSizer20);

    wxGrid* itemGrid21 = new wxGrid( itemPanel19, ID_GRID2, wxDefaultPosition, wxSize(200, 150), wxHSCROLL|wxVSCROLL );
    itemGrid21->SetDefaultColSize(100);
    itemGrid21->SetDefaultRowSize(25);
    itemGrid21->SetColLabelSize(25);
    itemGrid21->SetRowLabelSize(50);
    itemGrid21->CreateGrid(1, 2, wxGrid::wxGridSelectCells);
    itemStaticBoxSizer20->Add(itemGrid21, 1, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer22 = new wxBoxSizer(wxHORIZONTAL);
    itemStaticBoxSizer20->Add(itemBoxSizer22, 0, wxGROW|wxALL, 5);
    wxStaticText* itemStaticText23 = new wxStaticText( itemPanel19, wxID_STATIC, _("Default value :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer22->Add(itemStaticText23, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString itemChoice24Strings;
    wxChoice* itemChoice24 = new wxChoice( itemPanel19, ID_CHOICE15, wxDefaultPosition, wxDefaultSize, itemChoice24Strings, 0 );
    itemBoxSizer22->Add(itemChoice24, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer25 = new wxBoxSizer(wxHORIZONTAL);
    itemStaticBoxSizer20->Add(itemBoxSizer25, 0, wxGROW|wxALL, 5);
    wxToggleButton* itemToggleButton26 = new wxToggleButton( itemPanel19, ID_TOGGLEBUTTON1, _("+"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemToggleButton26->SetValue(false);
    itemBoxSizer25->Add(itemToggleButton26, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    wxToggleButton* itemToggleButton27 = new wxToggleButton( itemPanel19, ID_TOGGLEBUTTON2, _("-"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemToggleButton27->SetValue(false);
    itemBoxSizer25->Add(itemToggleButton27, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    wxToggleButton* itemToggleButton28 = new wxToggleButton( itemPanel19, ID_TOGGLEBUTTON3, _("Import..."), wxDefaultPosition, wxDefaultSize, 0 );
    itemToggleButton28->SetValue(false);
    itemBoxSizer25->Add(itemToggleButton28, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    wxToggleButton* itemToggleButton29 = new wxToggleButton( itemPanel19, ID_TOGGLEBUTTON4, _("Export..."), wxDefaultPosition, wxDefaultSize, 0 );
    itemToggleButton29->SetValue(false);
    itemBoxSizer25->Add(itemToggleButton29, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    itemNotebook18->AddPage(itemPanel19, _("Coded values"));

    wxPanel* itemPanel30 = new wxPanel( itemNotebook18, ID_PANEL17, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxFlexGridSizer* itemFlexGridSizer31 = new wxFlexGridSizer(3, 2, 0, 0);
    itemFlexGridSizer31->AddGrowableCol(1);
    itemPanel30->SetSizer(itemFlexGridSizer31);

    wxStaticText* itemStaticText32 = new wxStaticText( itemPanel30, wxID_STATIC, _("Default value :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer31->Add(itemStaticText32, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxTextCtrl* itemTextCtrl33 = new wxTextCtrl( itemPanel30, ID_TEXTCTRL12, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer31->Add(itemTextCtrl33, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText34 = new wxStaticText( itemPanel30, wxID_STATIC, _("Minimum value :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer31->Add(itemStaticText34, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxTextCtrl* itemTextCtrl35 = new wxTextCtrl( itemPanel30, ID_TEXTCTRL13, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer31->Add(itemTextCtrl35, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText36 = new wxStaticText( itemPanel30, wxID_STATIC, _("Maximum value :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer31->Add(itemStaticText36, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxTextCtrl* itemTextCtrl37 = new wxTextCtrl( itemPanel30, ID_TEXTCTRL14, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer31->Add(itemTextCtrl37, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemNotebook18->AddPage(itemPanel30, _("Range"));

    itemBoxSizer2->Add(itemNotebook18, 1, wxGROW|wxLEFT|wxRIGHT, 5);

    wxStdDialogButtonSizer* itemStdDialogButtonSizer38 = new wxStdDialogButtonSizer;

    itemBoxSizer2->Add(itemStdDialogButtonSizer38, 0, wxALIGN_RIGHT|wxALL, 5);
    wxButton* itemButton39 = new wxButton( itemDialog1, wxID_CANCEL, _("&Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer38->AddButton(itemButton39);

    wxButton* itemButton40 = new wxButton( itemDialog1, wxID_OK, _("&OK"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer38->AddButton(itemButton40);

    itemStdDialogButtonSizer38->Realize();

////@end wxDialog content construction
}


/*!
 * Should we show tooltips?
 */

bool wxDialog::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap wxDialog::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin wxDialog bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end wxDialog bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon wxDialog::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin wxDialog icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end wxDialog icon retrieval
}
