/////////////////////////////////////////////////////////////////////////////
// Name:        adjustshortcuts.cpp
// Purpose:     
// Author:      Lucien Schreiber
// Modified by: 
// Created:     Fri 28 Sep 12:54:12 2007
// RCS-ID:      
// Copyright:   (c) CREALP 2007
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), Fri 28 Sep 12:54:12 2007

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "adjustshortcuts.h"

////@begin XPM images
////@end XPM images


/*!
 * Adjustshortcuts type definition
 */

IMPLEMENT_DYNAMIC_CLASS( Adjustshortcuts, wxDialog )


/*!
 * Adjustshortcuts event table definition
 */

BEGIN_EVENT_TABLE( Adjustshortcuts, wxDialog )

////@begin Adjustshortcuts event table entries
////@end Adjustshortcuts event table entries

END_EVENT_TABLE()


/*!
 * Adjustshortcuts constructors
 */

Adjustshortcuts::Adjustshortcuts()
{
    Init();
}

Adjustshortcuts::Adjustshortcuts( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*!
 * Adjustshortcuts creator
 */

bool Adjustshortcuts::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin Adjustshortcuts creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end Adjustshortcuts creation
    return true;
}


/*!
 * Adjustshortcuts destructor
 */

Adjustshortcuts::~Adjustshortcuts()
{
////@begin Adjustshortcuts destruction
////@end Adjustshortcuts destruction
}


/*!
 * Member initialisation
 */

void Adjustshortcuts::Init()
{
////@begin Adjustshortcuts member initialisation
////@end Adjustshortcuts member initialisation
}


/*!
 * Control creation for Adjustshortcuts
 */

void Adjustshortcuts::CreateControls()
{    
////@begin Adjustshortcuts content construction
    // Generated by DialogBlocks, Mon 12 Nov 13:57:18 2007 (Personal Edition)

    Adjustshortcuts* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    wxNotebook* itemNotebook3 = new wxNotebook( itemDialog1, ID_NOTEBOOK8, wxDefaultPosition, wxDefaultSize, wxBK_DEFAULT );

    wxPanel* itemPanel4 = new wxPanel( itemNotebook3, ID_PANEL20, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxBoxSizer* itemBoxSizer5 = new wxBoxSizer(wxVERTICAL);
    itemPanel4->SetSizer(itemBoxSizer5);

    wxArrayString itemListBox6Strings;
    wxListBox* itemListBox6 = new wxListBox( itemPanel4, ID_LISTBOX4, wxDefaultPosition, wxSize(200, 200), itemListBox6Strings, wxLB_SINGLE );
    itemBoxSizer5->Add(itemListBox6, 1, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer7 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer5->Add(itemBoxSizer7, 0, wxALIGN_LEFT|wxRIGHT|wxTOP|wxBOTTOM, 5);
    wxToggleButton* itemToggleButton8 = new wxToggleButton( itemPanel4, ID_TOGGLEBUTTON23, _("Edit selected item..."), wxDefaultPosition, wxDefaultSize, 0 );
    itemToggleButton8->SetValue(false);
    itemBoxSizer7->Add(itemToggleButton8, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxToggleButton* itemToggleButton9 = new wxToggleButton( itemPanel4, ID_TOGGLEBUTTON24, _("Clear"), wxDefaultPosition, wxDefaultSize, 0 );
    itemToggleButton9->SetValue(false);
    itemBoxSizer7->Add(itemToggleButton9, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemNotebook3->AddPage(itemPanel4, _("Lines"));

    wxPanel* itemPanel10 = new wxPanel( itemNotebook3, ID_PANEL21, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxBoxSizer* itemBoxSizer11 = new wxBoxSizer(wxVERTICAL);
    itemPanel10->SetSizer(itemBoxSizer11);

    wxArrayString itemListBox12Strings;
    wxListBox* itemListBox12 = new wxListBox( itemPanel10, ID_LISTBOX, wxDefaultPosition, wxSize(200, 200), itemListBox12Strings, wxLB_SINGLE );
    itemBoxSizer11->Add(itemListBox12, 1, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer13 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer11->Add(itemBoxSizer13, 0, wxALIGN_CENTER_HORIZONTAL|wxRIGHT|wxTOP|wxBOTTOM, 5);
    wxToggleButton* itemToggleButton14 = new wxToggleButton( itemPanel10, ID_TOGGLEBUTTON, _("Edit selected item..."), wxDefaultPosition, wxDefaultSize, 0 );
    itemToggleButton14->SetValue(false);
    itemBoxSizer13->Add(itemToggleButton14, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxToggleButton* itemToggleButton15 = new wxToggleButton( itemPanel10, ID_TOGGLEBUTTON1, _("Clear"), wxDefaultPosition, wxDefaultSize, 0 );
    itemToggleButton15->SetValue(false);
    itemBoxSizer13->Add(itemToggleButton15, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemNotebook3->AddPage(itemPanel10, _("Point"));

    wxPanel* itemPanel16 = new wxPanel( itemNotebook3, ID_PANEL22, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxBoxSizer* itemBoxSizer17 = new wxBoxSizer(wxVERTICAL);
    itemPanel16->SetSizer(itemBoxSizer17);

    wxArrayString itemListBox18Strings;
    wxListBox* itemListBox18 = new wxListBox( itemPanel16, ID_LISTBOX1, wxDefaultPosition, wxSize(200, 200), itemListBox18Strings, wxLB_SINGLE );
    itemBoxSizer17->Add(itemListBox18, 1, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer19 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer17->Add(itemBoxSizer19, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);
    wxToggleButton* itemToggleButton20 = new wxToggleButton( itemPanel16, ID_TOGGLEBUTTON2, _("Edit selected item..."), wxDefaultPosition, wxDefaultSize, 0 );
    itemToggleButton20->SetValue(false);
    itemBoxSizer19->Add(itemToggleButton20, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxToggleButton* itemToggleButton21 = new wxToggleButton( itemPanel16, ID_TOGGLEBUTTON3, _("Clear"), wxDefaultPosition, wxDefaultSize, 0 );
    itemToggleButton21->SetValue(false);
    itemBoxSizer19->Add(itemToggleButton21, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemNotebook3->AddPage(itemPanel16, _("Polygons"));

    itemBoxSizer2->Add(itemNotebook3, 1, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer22 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer2->Add(itemBoxSizer22, 0, wxALIGN_RIGHT|wxALL, 5);

    wxButton* itemButton23 = new wxButton( itemDialog1, wxID_CLOSE, _("&Close"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer22->Add(itemButton23, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

////@end Adjustshortcuts content construction
}


/*!
 * Should we show tooltips?
 */

bool Adjustshortcuts::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap Adjustshortcuts::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin Adjustshortcuts bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end Adjustshortcuts bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon Adjustshortcuts::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin Adjustshortcuts icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end Adjustshortcuts icon retrieval
}
