/////////////////////////////////////////////////////////////////////////////
// Name:        dlg_attribution.cpp
// Purpose:     
// Author:      Lucien Schreiber
// Modified by: 
// Created:     Mon  6 Aug 15:19:35 2007
// RCS-ID:      
// Copyright:   (c) CREALP 2007
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), Mon 6 Aug 15:19:35 2007

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "dlg_attribution.h"

////@begin XPM images
////@end XPM images


/*!
 * ProjectEditObjectDefinitionDLG type definition
 */

IMPLEMENT_DYNAMIC_CLASS( ProjectEditObjectDefinitionDLG, wxDialog )


/*!
 * ProjectEditObjectDefinitionDLG event table definition
 */

BEGIN_EVENT_TABLE( ProjectEditObjectDefinitionDLG, wxDialog )

////@begin ProjectEditObjectDefinitionDLG event table entries
////@end ProjectEditObjectDefinitionDLG event table entries

END_EVENT_TABLE()


/*!
 * ProjectEditObjectDefinitionDLG constructors
 */

ProjectEditObjectDefinitionDLG::ProjectEditObjectDefinitionDLG()
{
    Init();
}

ProjectEditObjectDefinitionDLG::ProjectEditObjectDefinitionDLG( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*!
 * dlg_attribution creator
 */

bool ProjectEditObjectDefinitionDLG::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin ProjectEditObjectDefinitionDLG creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end ProjectEditObjectDefinitionDLG creation
    return true;
}


/*!
 * ProjectEditObjectDefinitionDLG destructor
 */

ProjectEditObjectDefinitionDLG::~ProjectEditObjectDefinitionDLG()
{
////@begin ProjectEditObjectDefinitionDLG destruction
////@end ProjectEditObjectDefinitionDLG destruction
}


/*!
 * Member initialisation
 */

void ProjectEditObjectDefinitionDLG::Init()
{
////@begin ProjectEditObjectDefinitionDLG member initialisation
    m_DLGPEO_Notebook = NULL;
    m_DLGPEO_Panel_Line = NULL;
    m_DLGPEO_List_Line = NULL;
    m_DLGPEO_Choice_Lyr_Line_Name = NULL;
    m_DLGPEO_Choice_Lyr_Line_Freq = NULL;
    m_DLGPEO_Panel_Point = NULL;
    m_DLGPEO_List_Line = NULL;
    m_DLGPEO_Choice_Lyr_Point_Name = NULL;
    m_DLGPEO_Panel_Poly = NULL;
    m_DLGPEO_List_Line = NULL;
    m_DLGPEO_Choice_Lyr_Poly_Name = NULL;
////@end ProjectEditObjectDefinitionDLG member initialisation
}


/*!
 * Control creation for dlg_attribution
 */

void ProjectEditObjectDefinitionDLG::CreateControls()
{    
////@begin ProjectEditObjectDefinitionDLG content construction
    ProjectEditObjectDefinitionDLG* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    m_DLGPEO_Notebook = new wxNotebook( itemDialog1, ID_DLGPEO_NOTEBOOK, wxDefaultPosition, wxDefaultSize, wxBK_DEFAULT );

    m_DLGPEO_Panel_Line = new wxPanel( m_DLGPEO_Notebook, ID_DLGPEO_PANEL_LINE, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxBoxSizer* itemBoxSizer5 = new wxBoxSizer(wxVERTICAL);
    m_DLGPEO_Panel_Line->SetSizer(itemBoxSizer5);

    m_DLGPEO_List_Line = new ListParam( m_DLGPEO_Panel_Line, ID_DLGPEO_LISTLINE, wxDefaultPosition, wxSize(400, 200), wxLC_REPORT );
    itemBoxSizer5->Add(m_DLGPEO_List_Line, 1, wxGROW|wxALL, 5);

    wxFlexGridSizer* itemFlexGridSizer7 = new wxFlexGridSizer(1, 2, 0, 0);
    itemFlexGridSizer7->AddGrowableCol(1);
    itemBoxSizer5->Add(itemFlexGridSizer7, 0, wxGROW|wxALL, 5);
    wxStaticText* itemStaticText8 = new wxStaticText( m_DLGPEO_Panel_Line, wxID_STATIC, _("Layer name :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemStaticText8, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5);

    wxArrayString m_DLGPEO_Choice_Lyr_Line_NameStrings;
    m_DLGPEO_Choice_Lyr_Line_NameStrings.Add(_("Polygons_TS"));
    m_DLGPEO_Choice_Lyr_Line_Name = new wxChoice( m_DLGPEO_Panel_Line, ID_DLGPEO_LYR_NAME_LINE, wxDefaultPosition, wxDefaultSize, m_DLGPEO_Choice_Lyr_Line_NameStrings, 0 );
    m_DLGPEO_Choice_Lyr_Line_Name->SetStringSelection(_("Polygons_TS"));
    itemFlexGridSizer7->Add(m_DLGPEO_Choice_Lyr_Line_Name, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxBOTTOM, 5);

    m_DLGPEO_Choice_Lyr_Line_Freq = new wxCheckBox( m_DLGPEO_Panel_Line, ID_DLGPEO_LINE_FRQ, _("This object is frequently used"), wxDefaultPosition, wxDefaultSize, 0 );
    m_DLGPEO_Choice_Lyr_Line_Freq->SetValue(false);
    itemBoxSizer5->Add(m_DLGPEO_Choice_Lyr_Line_Freq, 0, wxGROW|wxALL, 5);

    m_DLGPEO_Notebook->AddPage(m_DLGPEO_Panel_Line, _("Lines"));

    m_DLGPEO_Panel_Point = new wxPanel( m_DLGPEO_Notebook, ID_DLGPEO_PANEL_POINT, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxBoxSizer* itemBoxSizer12 = new wxBoxSizer(wxVERTICAL);
    m_DLGPEO_Panel_Point->SetSizer(itemBoxSizer12);

    m_DLGPEO_List_Line = new ListParam( m_DLGPEO_Panel_Point, ID_DLGPEO_LISTPOINT, wxDefaultPosition, wxSize(400, 200), wxLC_REPORT );
    itemBoxSizer12->Add(m_DLGPEO_List_Line, 1, wxGROW|wxALL, 5);

    wxFlexGridSizer* itemFlexGridSizer14 = new wxFlexGridSizer(1, 2, 0, 0);
    itemFlexGridSizer14->AddGrowableCol(1);
    itemBoxSizer12->Add(itemFlexGridSizer14, 0, wxGROW|wxALL, 5);
    wxStaticText* itemStaticText15 = new wxStaticText( m_DLGPEO_Panel_Point, wxID_STATIC, _("Layer name :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer14->Add(itemStaticText15, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5);

    wxArrayString m_DLGPEO_Choice_Lyr_Point_NameStrings;
    m_DLGPEO_Choice_Lyr_Point_NameStrings.Add(_("Polygons_TS"));
    m_DLGPEO_Choice_Lyr_Point_Name = new wxChoice( m_DLGPEO_Panel_Point, ID_DLGPEO_LYR_NAME_POINT, wxDefaultPosition, wxDefaultSize, m_DLGPEO_Choice_Lyr_Point_NameStrings, 0 );
    m_DLGPEO_Choice_Lyr_Point_Name->SetStringSelection(_("Polygons_TS"));
    itemFlexGridSizer14->Add(m_DLGPEO_Choice_Lyr_Point_Name, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxBOTTOM, 5);

    m_DLGPEO_Notebook->AddPage(m_DLGPEO_Panel_Point, _("Points"));

    m_DLGPEO_Panel_Poly = new wxPanel( m_DLGPEO_Notebook, ID_DLGPEO_PANEL_POLY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxBoxSizer* itemBoxSizer18 = new wxBoxSizer(wxVERTICAL);
    m_DLGPEO_Panel_Poly->SetSizer(itemBoxSizer18);

    m_DLGPEO_List_Line = new ListParam( m_DLGPEO_Panel_Poly, ID_DLGPEO_LISTPOLY, wxDefaultPosition, wxSize(400, 200), wxLC_REPORT );
    itemBoxSizer18->Add(m_DLGPEO_List_Line, 1, wxGROW|wxALL, 5);

    wxFlexGridSizer* itemFlexGridSizer20 = new wxFlexGridSizer(1, 2, 0, 0);
    itemFlexGridSizer20->AddGrowableCol(1);
    itemBoxSizer18->Add(itemFlexGridSizer20, 0, wxGROW|wxALL, 5);
    wxStaticText* itemStaticText21 = new wxStaticText( m_DLGPEO_Panel_Poly, wxID_STATIC, _("Layer name :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer20->Add(itemStaticText21, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5);

    wxArrayString m_DLGPEO_Choice_Lyr_Poly_NameStrings;
    m_DLGPEO_Choice_Lyr_Poly_NameStrings.Add(_("Polygons_TS"));
    m_DLGPEO_Choice_Lyr_Poly_Name = new wxChoice( m_DLGPEO_Panel_Poly, ID_DLGPEO_LYR_NAME_POLY, wxDefaultPosition, wxDefaultSize, m_DLGPEO_Choice_Lyr_Poly_NameStrings, 0 );
    m_DLGPEO_Choice_Lyr_Poly_Name->SetStringSelection(_("Polygons_TS"));
    itemFlexGridSizer20->Add(m_DLGPEO_Choice_Lyr_Poly_Name, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxBOTTOM, 5);

    m_DLGPEO_Notebook->AddPage(m_DLGPEO_Panel_Poly, _("Polygons"));

    itemBoxSizer2->Add(m_DLGPEO_Notebook, 1, wxGROW|wxALL, 5);

    wxStaticBox* itemStaticBoxSizer23Static = new wxStaticBox(itemDialog1, wxID_ANY, _("Operations"));
    wxStaticBoxSizer* itemStaticBoxSizer23 = new wxStaticBoxSizer(itemStaticBoxSizer23Static, wxHORIZONTAL);
    itemBoxSizer2->Add(itemStaticBoxSizer23, 0, wxGROW|wxLEFT|wxRIGHT|wxTOP, 5);

    wxToggleButton* itemToggleButton24 = new wxToggleButton( itemDialog1, ID_TOGGLEBUTTON8, _("+"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemToggleButton24->SetValue(false);
    itemStaticBoxSizer23->Add(itemToggleButton24, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxToggleButton* itemToggleButton25 = new wxToggleButton( itemDialog1, ID_TOGGLEBUTTON9, _("-"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemToggleButton25->SetValue(false);
    itemStaticBoxSizer23->Add(itemToggleButton25, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxToggleButton* itemToggleButton26 = new wxToggleButton( itemDialog1, ID_TOGGLEBUTTON10, _("Import..."), wxDefaultPosition, wxDefaultSize, 0 );
    itemToggleButton26->SetValue(false);
    itemStaticBoxSizer23->Add(itemToggleButton26, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxToggleButton* itemToggleButton27 = new wxToggleButton( itemDialog1, ID_TOGGLEBUTTON11, _("Export..."), wxDefaultPosition, wxDefaultSize, 0 );
    itemToggleButton27->SetValue(false);
    itemStaticBoxSizer23->Add(itemToggleButton27, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticLine* itemStaticLine28 = new wxStaticLine( itemDialog1, wxID_STATIC, wxDefaultPosition, wxDefaultSize, wxLI_HORIZONTAL );
    itemBoxSizer2->Add(itemStaticLine28, 0, wxGROW|wxALL, 5);

    wxStdDialogButtonSizer* itemStdDialogButtonSizer29 = new wxStdDialogButtonSizer;

    itemBoxSizer2->Add(itemStdDialogButtonSizer29, 0, wxALIGN_RIGHT|wxALL, 5);
    wxButton* itemButton30 = new wxButton( itemDialog1, wxID_CANCEL, _("&Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer29->AddButton(itemButton30);

    wxButton* itemButton31 = new wxButton( itemDialog1, wxID_SAVE, _("&Save"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer29->AddButton(itemButton31);

    itemStdDialogButtonSizer29->Realize();

////@end ProjectEditObjectDefinitionDLG content construction
}


/*!
 * Should we show tooltips?
 */

bool ProjectEditObjectDefinitionDLG::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap ProjectEditObjectDefinitionDLG::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin ProjectEditObjectDefinitionDLG bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end ProjectEditObjectDefinitionDLG bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon ProjectEditObjectDefinitionDLG::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin ProjectEditObjectDefinitionDLG icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end ProjectEditObjectDefinitionDLG icon retrieval
}
