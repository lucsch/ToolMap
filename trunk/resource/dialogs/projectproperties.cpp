/////////////////////////////////////////////////////////////////////////////
// Name:        projectproperties.cpp
// Purpose:     
// Author:      Lucien Schreiber
// Modified by: 
// Created:     Mon 27 Aug 15:48:36 2007
// RCS-ID:      
// Copyright:   (c) CREALP 2007
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), Mon 27 Aug 15:48:36 2007

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "projectproperties.h"

////@begin XPM images
////@end XPM images


/*!
 * Projectproperties type definition
 */

IMPLEMENT_DYNAMIC_CLASS( Projectproperties, wxDialog )


/*!
 * Projectproperties event table definition
 */

BEGIN_EVENT_TABLE( Projectproperties, wxDialog )

////@begin Projectproperties event table entries
////@end Projectproperties event table entries

END_EVENT_TABLE()


/*!
 * Projectproperties constructors
 */

Projectproperties::Projectproperties()
{
    Init();
}

Projectproperties::Projectproperties( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*!
 * Projectproperties creator
 */

bool Projectproperties::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin Projectproperties creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end Projectproperties creation
    return true;
}


/*!
 * Projectproperties destructor
 */

Projectproperties::~Projectproperties()
{
////@begin Projectproperties destruction
////@end Projectproperties destruction
}


/*!
 * Member initialisation
 */

void Projectproperties::Init()
{
////@begin Projectproperties member initialisation
////@end Projectproperties member initialisation
}


/*!
 * Control creation for Projectproperties
 */

void Projectproperties::CreateControls()
{    
////@begin Projectproperties content construction
    // Generated by DialogBlocks, Mon 12 Nov 13:43:03 2007 (Personal Edition)

    Projectproperties* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    wxNotebook* itemNotebook3 = new wxNotebook( itemDialog1, ID_NOTEBOOK7, wxDefaultPosition, wxDefaultSize, wxBK_DEFAULT );

    wxPanel* itemPanel4 = new wxPanel( itemNotebook3, ID_PANEL18, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxBoxSizer* itemBoxSizer5 = new wxBoxSizer(wxVERTICAL);
    itemPanel4->SetSizer(itemBoxSizer5);

    wxStaticBox* itemStaticBoxSizer6Static = new wxStaticBox(itemPanel4, wxID_ANY, _("Export project"));
    wxStaticBoxSizer* itemStaticBoxSizer6 = new wxStaticBoxSizer(itemStaticBoxSizer6Static, wxVERTICAL);
    itemBoxSizer5->Add(itemStaticBoxSizer6, 0, wxGROW|wxALL, 5);
    wxFlexGridSizer* itemFlexGridSizer7 = new wxFlexGridSizer(2, 3, 0, 0);
    itemFlexGridSizer7->AddGrowableCol(1);
    itemStaticBoxSizer6->Add(itemFlexGridSizer7, 1, wxGROW|wxALL, 0);
    wxStaticText* itemStaticText8 = new wxStaticText( itemPanel4, wxID_STATIC, _("Export as :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemStaticText8, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString itemChoice9Strings;
    itemChoice9Strings.Add(_("Shapefiles"));
    itemChoice9Strings.Add(_("Graphics (EPS)"));
    wxChoice* itemChoice9 = new wxChoice( itemPanel4, ID_CHOICE, wxDefaultPosition, wxDefaultSize, itemChoice9Strings, 0 );
    itemChoice9->SetStringSelection(_("Shapefiles"));
    itemFlexGridSizer7->Add(itemChoice9, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemFlexGridSizer7->Add(5, 5, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText11 = new wxStaticText( itemPanel4, wxID_STATIC, _("Export Path :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemStaticText11, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxTextCtrl* itemTextCtrl12 = new wxTextCtrl( itemPanel4, ID_TEXTCTRL, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemTextCtrl12, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton13 = new wxButton( itemPanel4, ID_BUTTON, _("..."), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemButton13, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticBox* itemStaticBoxSizer14Static = new wxStaticBox(itemPanel4, wxID_ANY, _("Incremental backup directory"));
    wxStaticBoxSizer* itemStaticBoxSizer14 = new wxStaticBoxSizer(itemStaticBoxSizer14Static, wxVERTICAL);
    itemBoxSizer5->Add(itemStaticBoxSizer14, 0, wxGROW|wxALL, 5);
    wxBoxSizer* itemBoxSizer15 = new wxBoxSizer(wxHORIZONTAL);
    itemStaticBoxSizer14->Add(itemBoxSizer15, 0, wxGROW|wxALL, 0);
    wxStaticText* itemStaticText16 = new wxStaticText( itemPanel4, wxID_STATIC, _("Path :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer15->Add(itemStaticText16, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxTextCtrl* itemTextCtrl17 = new wxTextCtrl( itemPanel4, ID_TEXTCTRL1, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer15->Add(itemTextCtrl17, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton18 = new wxButton( itemPanel4, ID_BUTTON1, _("..."), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer15->Add(itemButton18, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemNotebook3->AddPage(itemPanel4, _("Project settings"));

    wxPanel* itemPanel19 = new wxPanel( itemNotebook3, ID_PANEL19, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxStaticBox* itemStaticBoxSizer20Static = new wxStaticBox(itemPanel19, wxID_ANY, _("Define usables scales"));
    wxStaticBoxSizer* itemStaticBoxSizer20 = new wxStaticBoxSizer(itemStaticBoxSizer20Static, wxVERTICAL);
    itemPanel19->SetSizer(itemStaticBoxSizer20);

    wxArrayString itemListBox21Strings;
    wxListBox* itemListBox21 = new wxListBox( itemPanel19, ID_LISTBOX2, wxDefaultPosition, wxDefaultSize, itemListBox21Strings, wxLB_SINGLE );
    itemStaticBoxSizer20->Add(itemListBox21, 1, wxGROW|wxALL, 0);

    wxBoxSizer* itemBoxSizer22 = new wxBoxSizer(wxHORIZONTAL);
    itemStaticBoxSizer20->Add(itemBoxSizer22, 0, wxGROW|wxALL, 5);
    wxToggleButton* itemToggleButton23 = new wxToggleButton( itemPanel19, ID_TOGGLEBUTTON19, _("+"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemToggleButton23->SetValue(false);
    itemBoxSizer22->Add(itemToggleButton23, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxToggleButton* itemToggleButton24 = new wxToggleButton( itemPanel19, ID_TOGGLEBUTTON20, _("-"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemToggleButton24->SetValue(false);
    itemBoxSizer22->Add(itemToggleButton24, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText25 = new wxStaticText( itemPanel19, wxID_STATIC, _("Order :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer22->Add(itemStaticText25, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString itemChoice26Strings;
    itemChoice26Strings.Add(_("User defined"));
    itemChoice26Strings.Add(_("Sort ascending"));
    itemChoice26Strings.Add(_("Sort descending"));
    wxChoice* itemChoice26 = new wxChoice( itemPanel19, ID_CHOICE19, wxDefaultPosition, wxDefaultSize, itemChoice26Strings, 0 );
    itemChoice26->SetStringSelection(_("User defined"));
    itemBoxSizer22->Add(itemChoice26, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemNotebook3->AddPage(itemPanel19, _("Scale"));

    itemBoxSizer2->Add(itemNotebook3, 1, wxGROW|wxALL, 5);

    wxStdDialogButtonSizer* itemStdDialogButtonSizer27 = new wxStdDialogButtonSizer;

    itemBoxSizer2->Add(itemStdDialogButtonSizer27, 0, wxALIGN_RIGHT|wxALL, 5);
    wxButton* itemButton28 = new wxButton( itemDialog1, wxID_OK, _("&Save"), wxDefaultPosition, wxDefaultSize, 0 );
    itemButton28->SetDefault();
    itemStdDialogButtonSizer27->AddButton(itemButton28);

    wxButton* itemButton29 = new wxButton( itemDialog1, wxID_CANCEL, _("&Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer27->AddButton(itemButton29);

    itemStdDialogButtonSizer27->Realize();

////@end Projectproperties content construction
}


/*!
 * Should we show tooltips?
 */

bool Projectproperties::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap Projectproperties::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin Projectproperties bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end Projectproperties bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon Projectproperties::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin Projectproperties icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end Projectproperties icon retrieval
}
