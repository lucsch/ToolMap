/////////////////////////////////////////////////////////////////////////////
// Name:        informations.cpp
// Purpose:     
// Author:      Lucien Schreiber
// Modified by: 
// Created:     Mon 27 Aug 14:56:56 2007
// RCS-ID:      
// Copyright:   (c) CREALP 2007
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), Mon 27 Aug 14:56:56 2007

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "informations.h"

////@begin XPM images
////@end XPM images


/*!
 * Informations type definition
 */

IMPLEMENT_DYNAMIC_CLASS( Informations, wxDialog )


/*!
 * Informations event table definition
 */

BEGIN_EVENT_TABLE( Informations, wxDialog )

////@begin Informations event table entries
////@end Informations event table entries

END_EVENT_TABLE()


/*!
 * Informations constructors
 */

Informations::Informations()
{
    Init();
}

Informations::Informations( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*!
 * Informations creator
 */

bool Informations::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin Informations creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end Informations creation
    return true;
}


/*!
 * Informations destructor
 */

Informations::~Informations()
{
////@begin Informations destruction
////@end Informations destruction
}


/*!
 * Member initialisation
 */

void Informations::Init()
{
////@begin Informations member initialisation
////@end Informations member initialisation
}


/*!
 * Control creation for Informations
 */

void Informations::CreateControls()
{    
////@begin Informations content construction
    // Generated by DialogBlocks, Thu 30 Aug 15:27:29 2007 (Personal Edition)

    Informations* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    wxFlexGridSizer* itemFlexGridSizer3 = new wxFlexGridSizer(2, 2, 0, 0);
    itemFlexGridSizer3->AddGrowableCol(1);
    itemBoxSizer2->Add(itemFlexGridSizer3, 0, wxGROW|wxALL, 5);

    wxStaticText* itemStaticText4 = new wxStaticText( itemDialog1, wxID_STATIC, _("Layer :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer3->Add(itemStaticText4, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString itemChoice5Strings;
    wxChoice* itemChoice5 = new wxChoice( itemDialog1, ID_CHOICE9, wxDefaultPosition, wxDefaultSize, itemChoice5Strings, 0 );
    itemFlexGridSizer3->Add(itemChoice5, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText6 = new wxStaticText( itemDialog1, wxID_STATIC, _("Location :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer3->Add(itemStaticText6, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer7 = new wxBoxSizer(wxHORIZONTAL);
    itemFlexGridSizer3->Add(itemBoxSizer7, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5);

    wxStaticText* itemStaticText8 = new wxStaticText( itemDialog1, wxID_STATIC, _("x"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT );
    itemBoxSizer7->Add(itemStaticText8, 1, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5);

    wxStaticLine* itemStaticLine9 = new wxStaticLine( itemDialog1, ID_STATICLINE, wxDefaultPosition, wxDefaultSize, wxLI_VERTICAL );
    itemBoxSizer7->Add(itemStaticLine9, 0, wxGROW|wxALL, 5);

    wxStaticText* itemStaticText10 = new wxStaticText( itemDialog1, wxID_STATIC, _("y"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer7->Add(itemStaticText10, 1, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5);

    wxStaticBox* itemStaticBoxSizer11Static = new wxStaticBox(itemDialog1, wxID_ANY, _("Values"));
    wxStaticBoxSizer* itemStaticBoxSizer11 = new wxStaticBoxSizer(itemStaticBoxSizer11Static, wxVERTICAL);
    itemBoxSizer2->Add(itemStaticBoxSizer11, 1, wxGROW|wxALL, 5);

    wxStatusBar* itemStatusBar12 = new wxStatusBar( itemDialog1, ID_STATUSBAR, wxST_SIZEGRIP );
    itemStatusBar12->SetFieldsCount(1);
    itemStatusBar12->SetStatusText(_("Vertex : 199"), 0);
    itemBoxSizer2->Add(itemStatusBar12, 0, wxGROW|wxALL, 5);

////@end Informations content construction
}


/*!
 * Should we show tooltips?
 */

bool Informations::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap Informations::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin Informations bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end Informations bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon Informations::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin Informations icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end Informations icon retrieval
}
