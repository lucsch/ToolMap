/////////////////////////////////////////////////////////////////////////////
// Name:        rastersymbology.cpp
// Purpose:     
// Author:      Lucien Schreiber
// Modified by: 
// Created:     Tue  9 Oct 08:35:05 2007
// RCS-ID:      
// Copyright:   (c) CREALP 2007
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), Tue 9 Oct 08:35:05 2007

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "rastersymbology.h"

////@begin XPM images
////@end XPM images


/*!
 * Rastersymbology type definition
 */

IMPLEMENT_DYNAMIC_CLASS( Rastersymbology, wxDialog )


/*!
 * Rastersymbology event table definition
 */

BEGIN_EVENT_TABLE( Rastersymbology, wxDialog )

////@begin Rastersymbology event table entries
////@end Rastersymbology event table entries

END_EVENT_TABLE()


/*!
 * Rastersymbology constructors
 */

Rastersymbology::Rastersymbology()
{
    Init();
}

Rastersymbology::Rastersymbology( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*!
 * Rastersymbology creator
 */

bool Rastersymbology::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin Rastersymbology creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end Rastersymbology creation
    return true;
}


/*!
 * Rastersymbology destructor
 */

Rastersymbology::~Rastersymbology()
{
////@begin Rastersymbology destruction
////@end Rastersymbology destruction
}


/*!
 * Member initialisation
 */

void Rastersymbology::Init()
{
////@begin Rastersymbology member initialisation
////@end Rastersymbology member initialisation
}


/*!
 * Control creation for Rastersymbology
 */

void Rastersymbology::CreateControls()
{    
////@begin Rastersymbology content construction
    // Generated by DialogBlocks, Tue 9 Oct 14:19:33 2007 (Personal Edition)

    Rastersymbology* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    wxStaticBox* itemStaticBoxSizer3Static = new wxStaticBox(itemDialog1, wxID_ANY, _("General transparency"));
    wxStaticBoxSizer* itemStaticBoxSizer3 = new wxStaticBoxSizer(itemStaticBoxSizer3Static, wxVERTICAL);
    itemBoxSizer2->Add(itemStaticBoxSizer3, 0, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer4 = new wxBoxSizer(wxHORIZONTAL);
    itemStaticBoxSizer3->Add(itemBoxSizer4, 0, wxALIGN_CENTER_HORIZONTAL, 5);

    wxSlider* itemSlider5 = new wxSlider( itemDialog1, ID_SLIDER2, 0, 0, 100, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL );
    itemBoxSizer4->Add(itemSlider5, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxTextCtrl* itemTextCtrl6 = new wxTextCtrl( itemDialog1, ID_TEXTCTRL20, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer4->Add(itemTextCtrl6, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticBox* itemStaticBoxSizer7Static = new wxStaticBox(itemDialog1, wxID_ANY, _("Color transparency"));
    wxStaticBoxSizer* itemStaticBoxSizer7 = new wxStaticBoxSizer(itemStaticBoxSizer7Static, wxVERTICAL);
    itemBoxSizer2->Add(itemStaticBoxSizer7, 1, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer8 = new wxBoxSizer(wxHORIZONTAL);
    itemStaticBoxSizer7->Add(itemBoxSizer8, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxButton* itemButton9 = new wxButton( itemDialog1, ID_BUTTON34, _("Pick a color"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer8->Add(itemButton9, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStdDialogButtonSizer* itemStdDialogButtonSizer10 = new wxStdDialogButtonSizer;

    itemBoxSizer2->Add(itemStdDialogButtonSizer10, 0, wxALIGN_RIGHT|wxALL, 5);
    wxButton* itemButton11 = new wxButton( itemDialog1, wxID_OK, _("&Save"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer10->AddButton(itemButton11);

    wxButton* itemButton12 = new wxButton( itemDialog1, wxID_CANCEL, _("&Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer10->AddButton(itemButton12);

    itemStdDialogButtonSizer10->Realize();

////@end Rastersymbology content construction
}


/*!
 * Should we show tooltips?
 */

bool Rastersymbology::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap Rastersymbology::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin Rastersymbology bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end Rastersymbology bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon Rastersymbology::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin Rastersymbology icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end Rastersymbology icon retrieval
}
