/////////////////////////////////////////////////////////////////////////////
// Name:        newproject.cpp
// Purpose:     
// Author:      Lucien Schreiber
// Modified by: 
// Created:     Mon  6 Aug 17:02:59 2007
// RCS-ID:      
// Copyright:   (c) CREALP 2007
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), Mon 6 Aug 17:02:59 2007

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "newproject.h"

////@begin XPM images
////@end XPM images


/*!
 * ProjectDefDLG type definition
 */

IMPLEMENT_DYNAMIC_CLASS( ProjectDefDLG, wxDialog )


/*!
 * ProjectDefDLG event table definition
 */

BEGIN_EVENT_TABLE( ProjectDefDLG, wxDialog )

////@begin ProjectDefDLG event table entries
////@end ProjectDefDLG event table entries

END_EVENT_TABLE()


/*!
 * ProjectDefDLG constructors
 */

ProjectDefDLG::ProjectDefDLG()
{
    Init();
}

ProjectDefDLG::ProjectDefDLG( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*!
 * wxDialog creator
 */

bool ProjectDefDLG::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin ProjectDefDLG creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end ProjectDefDLG creation
    return true;
}


/*!
 * ProjectDefDLG destructor
 */

ProjectDefDLG::~ProjectDefDLG()
{
////@begin ProjectDefDLG destruction
////@end ProjectDefDLG destruction
}


/*!
 * Member initialisation
 */

void ProjectDefDLG::Init()
{
////@begin ProjectDefDLG member initialisation
    m_DlgPD_Proj_Path = NULL;
    m_DlgPd_Proj_Name = NULL;
    m_DlgPd_Proj_Unit = NULL;
    m_DlgPd_Proj_Projection = NULL;
    m_DlgPd_Stat_Model_List = NULL;
    m_DlgPd_Spat_Mdl_Add = NULL;
    m_DljPd_Spat_Mdl_Del = NULL;
////@end ProjectDefDLG member initialisation
}


/*!
 * Control creation for wxDialog
 */

void ProjectDefDLG::CreateControls()
{    
////@begin ProjectDefDLG content construction
    ProjectDefDLG* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    wxStaticBox* itemStaticBoxSizer3Static = new wxStaticBox(itemDialog1, wxID_ANY, _("Project properties"));
    wxStaticBoxSizer* itemStaticBoxSizer3 = new wxStaticBoxSizer(itemStaticBoxSizer3Static, wxVERTICAL);
    itemBoxSizer2->Add(itemStaticBoxSizer3, 0, wxGROW|wxALL, 5);

    wxFlexGridSizer* itemFlexGridSizer4 = new wxFlexGridSizer(4, 2, 0, 0);
    itemFlexGridSizer4->AddGrowableCol(1);
    itemStaticBoxSizer3->Add(itemFlexGridSizer4, 0, wxGROW|wxALL, 5);

    wxStaticText* itemStaticText5 = new wxStaticText( itemDialog1, wxID_STATIC, _("Project path :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer4->Add(itemStaticText5, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    m_DlgPD_Proj_Path = new wxTextCtrl( itemDialog1, ID_DLGPD_PROJ_PATH, _T(""), wxDefaultPosition, wxSize(300, -1), 0 );
    itemFlexGridSizer4->Add(m_DlgPD_Proj_Path, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText7 = new wxStaticText( itemDialog1, wxID_STATIC, _("Project name :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer4->Add(itemStaticText7, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    m_DlgPd_Proj_Name = new wxTextCtrl( itemDialog1, ID_DLGPD_PROJ_NAME, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer4->Add(m_DlgPd_Proj_Name, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText9 = new wxStaticText( itemDialog1, wxID_STATIC, _("Units"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer4->Add(itemStaticText9, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString m_DlgPd_Proj_UnitStrings;
    m_DlgPd_Proj_UnitStrings.Add(_("Meters"));
    m_DlgPd_Proj_UnitStrings.Add(_("Kilometers"));
    m_DlgPd_Proj_UnitStrings.Add(_("Lat / Long"));
    m_DlgPd_Proj_Unit = new wxChoice( itemDialog1, ID_DLGPD_PROJ_UNIT, wxDefaultPosition, wxDefaultSize, m_DlgPd_Proj_UnitStrings, 0 );
    m_DlgPd_Proj_Unit->SetStringSelection(_("Meters"));
    itemFlexGridSizer4->Add(m_DlgPd_Proj_Unit, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText11 = new wxStaticText( itemDialog1, wxID_STATIC, _("Projection :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer4->Add(itemStaticText11, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString m_DlgPd_Proj_ProjectionStrings;
    m_DlgPd_Proj_ProjectionStrings.Add(_("No projection"));
    m_DlgPd_Proj_ProjectionStrings.Add(_("Swiss projection"));
    m_DlgPd_Proj_Projection = new wxChoice( itemDialog1, ID_DLGPD_PROJ_PROJECTION, wxDefaultPosition, wxDefaultSize, m_DlgPd_Proj_ProjectionStrings, 0 );
    m_DlgPd_Proj_Projection->SetStringSelection(_("No projection"));
    itemFlexGridSizer4->Add(m_DlgPd_Proj_Projection, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticBox* itemStaticBoxSizer13Static = new wxStaticBox(itemDialog1, wxID_ANY, _("Define your spatial model"));
    wxStaticBoxSizer* itemStaticBoxSizer13 = new wxStaticBoxSizer(itemStaticBoxSizer13Static, wxVERTICAL);
    itemBoxSizer2->Add(itemStaticBoxSizer13, 1, wxGROW|wxALL, 5);

    m_DlgPd_Stat_Model_List = new ListParam( itemDialog1, ID_DLGPD_SPAT_MODEL_LIST, wxDefaultPosition, wxSize(100, 200), wxLC_REPORT );
    itemStaticBoxSizer13->Add(m_DlgPd_Stat_Model_List, 1, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer15 = new wxBoxSizer(wxHORIZONTAL);
    itemStaticBoxSizer13->Add(itemBoxSizer15, 0, wxALIGN_LEFT|wxALL, 5);

    m_DlgPd_Spat_Mdl_Add = new wxToggleButton( itemDialog1, ID_DLGPD_SPAT_MDL_ADD, _("+"), wxDefaultPosition, wxSize(40, -1), 0 );
    m_DlgPd_Spat_Mdl_Add->SetValue(false);
    itemBoxSizer15->Add(m_DlgPd_Spat_Mdl_Add, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    m_DljPd_Spat_Mdl_Del = new wxToggleButton( itemDialog1, ID_DLJPD_SPAT_MDL_DEL, _("-"), wxDefaultPosition, wxSize(40, -1), 0 );
    m_DljPd_Spat_Mdl_Del->SetValue(false);
    itemBoxSizer15->Add(m_DljPd_Spat_Mdl_Del, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    wxStdDialogButtonSizer* itemStdDialogButtonSizer18 = new wxStdDialogButtonSizer;

    itemBoxSizer2->Add(itemStdDialogButtonSizer18, 0, wxALIGN_RIGHT|wxALL, 5);
    wxButton* itemButton19 = new wxButton( itemDialog1, wxID_OK, _("&Create new project"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer18->AddButton(itemButton19);

    wxButton* itemButton20 = new wxButton( itemDialog1, wxID_CANCEL, _("&Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer18->AddButton(itemButton20);

    itemStdDialogButtonSizer18->Realize();

////@end ProjectDefDLG content construction
}


/*!
 * Should we show tooltips?
 */

bool ProjectDefDLG::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap ProjectDefDLG::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin ProjectDefDLG bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end ProjectDefDLG bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon ProjectDefDLG::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin ProjectDefDLG icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end ProjectDefDLG icon retrieval
}
