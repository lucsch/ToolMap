/////////////////////////////////////////////////////////////////////////////
// Name:        newproject.cpp
// Purpose:     
// Author:      Lucien Schreiber
// Modified by: 
// Created:     Mon  6 Aug 17:02:59 2007
// RCS-ID:      
// Copyright:   (c) CREALP 2007
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), Mon 6 Aug 17:02:59 2007

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "newproject.h"

////@begin XPM images
////@end XPM images


/*!
 * wxDialog type definition
 */

IMPLEMENT_DYNAMIC_CLASS( wxDialog, wxDialog )


/*!
 * wxDialog event table definition
 */

BEGIN_EVENT_TABLE( wxDialog, wxDialog )

////@begin wxDialog event table entries
////@end wxDialog event table entries

END_EVENT_TABLE()


/*!
 * wxDialog constructors
 */

wxDialog::wxDialog()
{
    Init();
}

wxDialog::wxDialog( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*!
 * wxDialog creator
 */

bool wxDialog::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin wxDialog creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end wxDialog creation
    return true;
}


/*!
 * wxDialog destructor
 */

wxDialog::~wxDialog()
{
////@begin wxDialog destruction
////@end wxDialog destruction
}


/*!
 * Member initialisation
 */

void wxDialog::Init()
{
////@begin wxDialog member initialisation
////@end wxDialog member initialisation
}


/*!
 * Control creation for wxDialog
 */

void wxDialog::CreateControls()
{    
////@begin wxDialog content construction
    // Generated by DialogBlocks, Tue 30 Oct 15:09:54 2007 (Personal Edition)

    wxDialog* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    wxStaticBox* itemStaticBoxSizer3Static = new wxStaticBox(itemDialog1, wxID_ANY, _("Project properties"));
    wxStaticBoxSizer* itemStaticBoxSizer3 = new wxStaticBoxSizer(itemStaticBoxSizer3Static, wxVERTICAL);
    itemBoxSizer2->Add(itemStaticBoxSizer3, 0, wxGROW|wxALL, 5);

    wxFlexGridSizer* itemFlexGridSizer4 = new wxFlexGridSizer(4, 3, 0, 0);
    itemFlexGridSizer4->AddGrowableCol(1);
    itemStaticBoxSizer3->Add(itemFlexGridSizer4, 0, wxGROW|wxALL, 5);

    wxStaticText* itemStaticText5 = new wxStaticText( itemDialog1, wxID_STATIC, _("Project path :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer4->Add(itemStaticText5, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxTextCtrl* itemTextCtrl6 = new wxTextCtrl( itemDialog1, ID_TEXTCTRL1, _T(""), wxDefaultPosition, wxSize(200, -1), 0 );
    itemFlexGridSizer4->Add(itemTextCtrl6, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton7 = new wxButton( itemDialog1, ID_BUTTON1, _("..."), wxDefaultPosition, wxSize(50, -1), 0 );
    itemFlexGridSizer4->Add(itemButton7, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText8 = new wxStaticText( itemDialog1, wxID_STATIC, _("Project name :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer4->Add(itemStaticText8, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxTextCtrl* itemTextCtrl9 = new wxTextCtrl( itemDialog1, ID_TEXTCTRL2, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer4->Add(itemTextCtrl9, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemFlexGridSizer4->Add(5, 5, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText11 = new wxStaticText( itemDialog1, wxID_STATIC, _("Units"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer4->Add(itemStaticText11, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString itemChoice12Strings;
    itemChoice12Strings.Add(_("Meters"));
    itemChoice12Strings.Add(_("Kilometers"));
    itemChoice12Strings.Add(_("Lat / Long"));
    wxChoice* itemChoice12 = new wxChoice( itemDialog1, ID_CHOICE10, wxDefaultPosition, wxDefaultSize, itemChoice12Strings, 0 );
    itemChoice12->SetStringSelection(_("Meters"));
    itemFlexGridSizer4->Add(itemChoice12, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemFlexGridSizer4->Add(5, 5, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText14 = new wxStaticText( itemDialog1, wxID_STATIC, _("Projection :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer4->Add(itemStaticText14, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString itemChoice15Strings;
    itemChoice15Strings.Add(_("No projection"));
    itemChoice15Strings.Add(_("Swiss projection"));
    wxChoice* itemChoice15 = new wxChoice( itemDialog1, ID_CHOICE8, wxDefaultPosition, wxDefaultSize, itemChoice15Strings, 0 );
    itemChoice15->SetStringSelection(_("No projection"));
    itemFlexGridSizer4->Add(itemChoice15, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticBox* itemStaticBoxSizer16Static = new wxStaticBox(itemDialog1, wxID_ANY, _("Define your spatial model"));
    wxStaticBoxSizer* itemStaticBoxSizer16 = new wxStaticBoxSizer(itemStaticBoxSizer16Static, wxVERTICAL);
    itemBoxSizer2->Add(itemStaticBoxSizer16, 1, wxGROW|wxALL, 5);

    wxListCtrl* itemListCtrl17 = new wxListCtrl( itemDialog1, ID_LISTCTRL1, wxDefaultPosition, wxSize(100, 200), wxLC_REPORT );
    if (wxDialog::ShowToolTips())
        itemListCtrl17->SetToolTip(_("define spatial model "));
    itemStaticBoxSizer16->Add(itemListCtrl17, 1, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer18 = new wxBoxSizer(wxHORIZONTAL);
    itemStaticBoxSizer16->Add(itemBoxSizer18, 0, wxALIGN_LEFT|wxALL, 5);

    wxToggleButton* itemToggleButton19 = new wxToggleButton( itemDialog1, ID_TOGGLEBUTTON5, _("+"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemToggleButton19->SetValue(false);
    itemBoxSizer18->Add(itemToggleButton19, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    wxToggleButton* itemToggleButton20 = new wxToggleButton( itemDialog1, ID_TOGGLEBUTTON6, _("-"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemToggleButton20->SetValue(false);
    itemBoxSizer18->Add(itemToggleButton20, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    wxStdDialogButtonSizer* itemStdDialogButtonSizer21 = new wxStdDialogButtonSizer;

    itemBoxSizer2->Add(itemStdDialogButtonSizer21, 0, wxALIGN_RIGHT|wxALL, 5);
    wxButton* itemButton22 = new wxButton( itemDialog1, wxID_OK, _("&Create new project"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer21->AddButton(itemButton22);

    wxButton* itemButton23 = new wxButton( itemDialog1, wxID_CANCEL, _("&Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer21->AddButton(itemButton23);

    itemStdDialogButtonSizer21->Realize();

////@end wxDialog content construction
}


/*!
 * Should we show tooltips?
 */

bool wxDialog::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap wxDialog::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin wxDialog bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end wxDialog bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon wxDialog::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin wxDialog icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end wxDialog icon retrieval
}
