/////////////////////////////////////////////////////////////////////////////
// Name:        newproject.cpp
// Purpose:     
// Author:      Lucien Schreiber
// Modified by: 
// Created:     Mon  6 Aug 17:02:59 2007
// RCS-ID:      
// Copyright:   (c) CREALP 2007
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), Mon 6 Aug 17:02:59 2007

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "newproject.h"

////@begin XPM images
////@end XPM images


/*!
 * ProjectDefDLG type definition
 */

IMPLEMENT_DYNAMIC_CLASS( ProjectDefDLG, wxDialog )


/*!
 * ProjectDefDLG event table definition
 */

BEGIN_EVENT_TABLE( ProjectDefDLG, wxDialog )

////@begin ProjectDefDLG event table entries
////@end ProjectDefDLG event table entries

END_EVENT_TABLE()


/*!
 * ProjectDefDLG constructors
 */

ProjectDefDLG::ProjectDefDLG()
{
    Init();
}

ProjectDefDLG::ProjectDefDLG( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*!
 * wxDialog creator
 */

bool ProjectDefDLG::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin ProjectDefDLG creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end ProjectDefDLG creation
    return true;
}


/*!
 * ProjectDefDLG destructor
 */

ProjectDefDLG::~ProjectDefDLG()
{
////@begin ProjectDefDLG destruction
////@end ProjectDefDLG destruction
}


/*!
 * Member initialisation
 */

void ProjectDefDLG::Init()
{
////@begin ProjectDefDLG member initialisation
    m_DlgPd_Panel_Proj = NULL;
    m_DlgPD_Proj_Path = NULL;
    m_DlgPd_Proj_Name = NULL;
    m_DlgPd_Proj_Unit = NULL;
    m_DlgPd_Proj_Projection = NULL;
    m_DlgPd_Proj_Author = NULL;
    m_DlgPd_Proj_Comment = NULL;
    m_DlgPd_Panel_Spatial = NULL;
    m_DlgPd_Stat_Model_List = NULL;
    m_DlgPd_Spat_Mdl_Add = NULL;
    m_DljPd_Spat_Mdl_Del = NULL;
    m_DlgPd_Button_Ok = NULL;
////@end ProjectDefDLG member initialisation
}


/*!
 * Control creation for wxDialog
 */

void ProjectDefDLG::CreateControls()
{    
////@begin ProjectDefDLG content construction
    // Generated by DialogBlocks, Tue 8 Apr 15:24:41 2008 (Personal Edition)

    ProjectDefDLG* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    wxNotebook* itemNotebook3 = new wxNotebook( itemDialog1, ID_DLGPD_NOTEBOOK, wxDefaultPosition, wxDefaultSize, wxBK_DEFAULT );

    m_DlgPd_Panel_Proj = new wxPanel( itemNotebook3, ID_DLGPD_PANEL_PROJ, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxBoxSizer* itemBoxSizer5 = new wxBoxSizer(wxVERTICAL);
    m_DlgPd_Panel_Proj->SetSizer(itemBoxSizer5);

    wxFlexGridSizer* itemFlexGridSizer6 = new wxFlexGridSizer(4, 2, 0, 0);
    itemFlexGridSizer6->AddGrowableCol(1);
    itemBoxSizer5->Add(itemFlexGridSizer6, 0, wxGROW|wxALL, 5);
    wxStaticText* itemStaticText7 = new wxStaticText( m_DlgPd_Panel_Proj, wxID_STATIC, _("Project path :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer6->Add(itemStaticText7, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    m_DlgPD_Proj_Path = new wxDirPickerCtrlBest( m_DlgPd_Panel_Proj, ID_DLGPD_PROJ_PATH, _T(""), wxDefaultPosition, wxSize(300, -1), 0 );
    itemFlexGridSizer6->Add(m_DlgPD_Proj_Path, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText9 = new wxStaticText( m_DlgPd_Panel_Proj, wxID_STATIC, _("Project name :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer6->Add(itemStaticText9, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    m_DlgPd_Proj_Name = new wxTextCtrl( m_DlgPd_Panel_Proj, ID_DLGPD_PROJ_NAME, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer6->Add(m_DlgPd_Proj_Name, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText11 = new wxStaticText( m_DlgPd_Panel_Proj, wxID_STATIC, _("Units"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer6->Add(itemStaticText11, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString m_DlgPd_Proj_UnitStrings;
    m_DlgPd_Proj_UnitStrings.Add(_("Meters"));
    m_DlgPd_Proj_UnitStrings.Add(_("Kilometers"));
    m_DlgPd_Proj_UnitStrings.Add(_("Lat / Long"));
    m_DlgPd_Proj_Unit = new wxChoice( m_DlgPd_Panel_Proj, ID_DLGPD_PROJ_UNIT, wxDefaultPosition, wxDefaultSize, m_DlgPd_Proj_UnitStrings, 0 );
    m_DlgPd_Proj_Unit->SetStringSelection(_("Meters"));
    itemFlexGridSizer6->Add(m_DlgPd_Proj_Unit, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText13 = new wxStaticText( m_DlgPd_Panel_Proj, wxID_STATIC, _("Projection :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer6->Add(itemStaticText13, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString m_DlgPd_Proj_ProjectionStrings;
    m_DlgPd_Proj_ProjectionStrings.Add(_("No projection"));
    m_DlgPd_Proj_ProjectionStrings.Add(_("Swiss projection"));
    m_DlgPd_Proj_Projection = new wxChoice( m_DlgPd_Panel_Proj, ID_DLGPD_PROJECTION, wxDefaultPosition, wxDefaultSize, m_DlgPd_Proj_ProjectionStrings, 0 );
    m_DlgPd_Proj_Projection->SetStringSelection(_("No projection"));
    itemFlexGridSizer6->Add(m_DlgPd_Proj_Projection, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticBox* itemStaticBoxSizer15Static = new wxStaticBox(m_DlgPd_Panel_Proj, wxID_ANY, _("Summary"));
    wxStaticBoxSizer* itemStaticBoxSizer15 = new wxStaticBoxSizer(itemStaticBoxSizer15Static, wxVERTICAL);
    itemBoxSizer5->Add(itemStaticBoxSizer15, 1, wxGROW|wxALL, 5);
    wxFlexGridSizer* itemFlexGridSizer16 = new wxFlexGridSizer(2, 2, 0, 0);
    itemFlexGridSizer16->AddGrowableRow(1);
    itemFlexGridSizer16->AddGrowableCol(1);
    itemStaticBoxSizer15->Add(itemFlexGridSizer16, 1, wxGROW|wxALL, 5);
    wxStaticText* itemStaticText17 = new wxStaticText( m_DlgPd_Panel_Proj, wxID_STATIC, _("Author :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer16->Add(itemStaticText17, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    m_DlgPd_Proj_Author = new wxTextCtrl( m_DlgPd_Panel_Proj, ID_DLGPD_PROJ_AUTHOR, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    m_DlgPd_Proj_Author->SetMaxLength(254);
    itemFlexGridSizer16->Add(m_DlgPd_Proj_Author, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText19 = new wxStaticText( m_DlgPd_Panel_Proj, wxID_STATIC, _("Comments :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer16->Add(itemStaticText19, 0, wxALIGN_LEFT|wxALIGN_TOP|wxALL, 5);

    m_DlgPd_Proj_Comment = new wxTextCtrl( m_DlgPd_Panel_Proj, ID_DLGPD_PROJ_COMMENT, _T(""), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE );
    itemFlexGridSizer16->Add(m_DlgPd_Proj_Comment, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemNotebook3->AddPage(m_DlgPd_Panel_Proj, _("Project properties"));

    m_DlgPd_Panel_Spatial = new wxPanel( itemNotebook3, ID_DLGPD_PANEL_SPAT, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxBoxSizer* itemBoxSizer22 = new wxBoxSizer(wxVERTICAL);
    m_DlgPd_Panel_Spatial->SetSizer(itemBoxSizer22);

    m_DlgPd_Stat_Model_List = new ListParam( m_DlgPd_Panel_Spatial, ID_DLGPD_SPAT_MDL_LIST, wxDefaultPosition, wxSize(100, 200), wxLC_REPORT );
    itemBoxSizer22->Add(m_DlgPd_Stat_Model_List, 1, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer24 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer22->Add(itemBoxSizer24, 0, wxGROW|wxALL, 5);
    m_DlgPd_Spat_Mdl_Add = new wxToggleButton( m_DlgPd_Panel_Spatial, ID_DLGPD_SPAT_MDL_ADD, _("+"), wxDefaultPosition, wxSize(40, -1), 0 );
    m_DlgPd_Spat_Mdl_Add->SetValue(false);
    itemBoxSizer24->Add(m_DlgPd_Spat_Mdl_Add, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    m_DljPd_Spat_Mdl_Del = new wxToggleButton( m_DlgPd_Panel_Spatial, ID_DLGPD_SPAT_MDL_DEL, _("-"), wxDefaultPosition, wxSize(40, -1), 0 );
    m_DljPd_Spat_Mdl_Del->SetValue(false);
    itemBoxSizer24->Add(m_DljPd_Spat_Mdl_Del, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    itemNotebook3->AddPage(m_DlgPd_Panel_Spatial, _("Spatial model"));

    itemBoxSizer2->Add(itemNotebook3, 1, wxGROW|wxALL, 5);

    wxStaticLine* itemStaticLine27 = new wxStaticLine( itemDialog1, wxID_STATIC, wxDefaultPosition, wxDefaultSize, wxLI_HORIZONTAL );
    itemBoxSizer2->Add(itemStaticLine27, 0, wxGROW|wxALL, 5);

    wxStdDialogButtonSizer* itemStdDialogButtonSizer28 = new wxStdDialogButtonSizer;

    itemBoxSizer2->Add(itemStdDialogButtonSizer28, 0, wxALIGN_RIGHT|wxALL, 5);
    m_DlgPd_Button_Ok = new wxButton( itemDialog1, wxID_OK, _("&Create new project"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer28->AddButton(m_DlgPd_Button_Ok);

    wxButton* itemButton30 = new wxButton( itemDialog1, wxID_CANCEL, _("&Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer28->AddButton(itemButton30);

    itemStdDialogButtonSizer28->Realize();

////@end ProjectDefDLG content construction
}


/*!
 * Should we show tooltips?
 */

bool ProjectDefDLG::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap ProjectDefDLG::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin ProjectDefDLG bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end ProjectDefDLG bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon ProjectDefDLG::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin ProjectDefDLG icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end ProjectDefDLG icon retrieval
}
