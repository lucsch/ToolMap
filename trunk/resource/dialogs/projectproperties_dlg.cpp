/////////////////////////////////////////////////////////////////////////////
// Name:        projectproperties_dlg.cpp
// Purpose:     
// Author:      Lucien Schreiber
// Modified by: 
// Created:     Tue 25 Mar 14:27:31 2008
// RCS-ID:      
// Copyright:   (c) CREALP 2007
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), Tue 25 Mar 14:27:31 2008

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "projectproperties_dlg.h"

////@begin XPM images

////@end XPM images


/*!
 * ProjectPropertiesDLG type definition
 */

IMPLEMENT_DYNAMIC_CLASS( ProjectPropertiesDLG, wxDialog )


/*!
 * ProjectPropertiesDLG event table definition
 */

BEGIN_EVENT_TABLE( ProjectPropertiesDLG, wxDialog )

////@begin ProjectPropertiesDLG event table entries
////@end ProjectPropertiesDLG event table entries

END_EVENT_TABLE()


/*!
 * ProjectPropertiesDLG constructors
 */

ProjectPropertiesDLG::ProjectPropertiesDLG()
{
    Init();
}

ProjectPropertiesDLG::ProjectPropertiesDLG( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*!
 * ProjectPropertiesDLG creator
 */

bool ProjectPropertiesDLG::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin ProjectPropertiesDLG creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end ProjectPropertiesDLG creation
    return true;
}


/*!
 * ProjectPropertiesDLG destructor
 */

ProjectPropertiesDLG::~ProjectPropertiesDLG()
{
////@begin ProjectPropertiesDLG destruction
////@end ProjectPropertiesDLG destruction
}


/*!
 * Member initialisation
 */

void ProjectPropertiesDLG::Init()
{
////@begin ProjectPropertiesDLG member initialisation
    m_DLGPS_Notebook = NULL;
    m_DLGPS_Export_Type_Choice = NULL;
    m_DLGPS_Export_Path = NULL;
    m_DLGPS_Backup_Path = NULL;
    m_DLGPS_Scale_List = NULL;
    m_DLGPS_Scale_Order_Choice = NULL;
////@end ProjectPropertiesDLG member initialisation
}


/*!
 * Control creation for ProjectPropertiesDLG
 */

void ProjectPropertiesDLG::CreateControls()
{    
////@begin ProjectPropertiesDLG content construction
    // Generated by DialogBlocks, Tue 25 Mar 14:27:31 2008 (Personal Edition)

    ProjectPropertiesDLG* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    m_DLGPS_Notebook = new wxNotebook( itemDialog1, ID_DLGPS_NOTEBOOK, wxDefaultPosition, wxDefaultSize, wxBK_DEFAULT );

    wxPanel* itemPanel4 = new wxPanel( m_DLGPS_Notebook, ID_DLGPS_PANEL_SETTINGS, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxBoxSizer* itemBoxSizer5 = new wxBoxSizer(wxVERTICAL);
    itemPanel4->SetSizer(itemBoxSizer5);

    wxStaticBox* itemStaticBoxSizer6Static = new wxStaticBox(itemPanel4, wxID_ANY, _("Export project"));
    wxStaticBoxSizer* itemStaticBoxSizer6 = new wxStaticBoxSizer(itemStaticBoxSizer6Static, wxVERTICAL);
    itemBoxSizer5->Add(itemStaticBoxSizer6, 0, wxGROW|wxALL, 5);
    wxFlexGridSizer* itemFlexGridSizer7 = new wxFlexGridSizer(2, 2, 0, 0);
    itemFlexGridSizer7->AddGrowableCol(1);
    itemStaticBoxSizer6->Add(itemFlexGridSizer7, 1, wxGROW|wxALL, 0);
    wxStaticText* itemStaticText8 = new wxStaticText( itemPanel4, wxID_STATIC, _("Export as :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemStaticText8, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString m_DLGPS_Export_Type_ChoiceStrings;
    m_DLGPS_Export_Type_ChoiceStrings.Add(_("Shapefiles"));
    m_DLGPS_Export_Type_ChoiceStrings.Add(_("Graphics (EPS)"));
    m_DLGPS_Export_Type_Choice = new wxChoice( itemPanel4, ID_DLGPS_EXPORT_TYPE_CHOICE, wxDefaultPosition, wxSize(300, -1), m_DLGPS_Export_Type_ChoiceStrings, 0 );
    m_DLGPS_Export_Type_Choice->SetStringSelection(_("Shapefiles"));
    itemFlexGridSizer7->Add(m_DLGPS_Export_Type_Choice, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText10 = new wxStaticText( itemPanel4, wxID_STATIC, _("Export Path :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemStaticText10, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    m_DLGPS_Export_Path = new wxTextCtrl( itemPanel4, ID_DLGPS_EXPORT_PATH, _("wxDirPickerCtrl"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(m_DLGPS_Export_Path, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticBox* itemStaticBoxSizer12Static = new wxStaticBox(itemPanel4, wxID_ANY, _("Incremental backup directory"));
    wxStaticBoxSizer* itemStaticBoxSizer12 = new wxStaticBoxSizer(itemStaticBoxSizer12Static, wxVERTICAL);
    itemBoxSizer5->Add(itemStaticBoxSizer12, 0, wxGROW|wxALL, 5);
    wxBoxSizer* itemBoxSizer13 = new wxBoxSizer(wxHORIZONTAL);
    itemStaticBoxSizer12->Add(itemBoxSizer13, 0, wxGROW|wxALL, 0);
    wxStaticText* itemStaticText14 = new wxStaticText( itemPanel4, wxID_STATIC, _("Path :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer13->Add(itemStaticText14, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    m_DLGPS_Backup_Path = new wxTextCtrl( itemPanel4, ID_DLGPS_BACKUP_PATH, _("wxDirPickerCtrl"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer13->Add(m_DLGPS_Backup_Path, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    m_DLGPS_Notebook->AddPage(itemPanel4, _("Project settings"));

    wxPanel* itemPanel16 = new wxPanel( m_DLGPS_Notebook, ID_DLGPS_PANEL_SCALE, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
    wxStaticBox* itemStaticBoxSizer17Static = new wxStaticBox(itemPanel16, wxID_ANY, _("Define usables scales"));
    wxStaticBoxSizer* itemStaticBoxSizer17 = new wxStaticBoxSizer(itemStaticBoxSizer17Static, wxVERTICAL);
    itemPanel16->SetSizer(itemStaticBoxSizer17);

    wxArrayString m_DLGPS_Scale_ListStrings;
    m_DLGPS_Scale_List = new wxListBox( itemPanel16, ID_DLGPS_SCALE_LIST, wxDefaultPosition, wxDefaultSize, m_DLGPS_Scale_ListStrings, wxLB_SINGLE );
    itemStaticBoxSizer17->Add(m_DLGPS_Scale_List, 1, wxGROW|wxALL, 0);

    wxBoxSizer* itemBoxSizer19 = new wxBoxSizer(wxHORIZONTAL);
    itemStaticBoxSizer17->Add(itemBoxSizer19, 0, wxGROW|wxALL, 5);
    wxFlatButton* itemFlatButton20 = new wxFlatButton( itemPanel16, ID_DLGPS_BTN_SCALE_ADD, _("+"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemFlatButton20->SetValue(false);
    itemBoxSizer19->Add(itemFlatButton20, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxFlatButton* itemFlatButton21 = new wxFlatButton( itemPanel16, ID_DLGPS_BTN_SCALE_DEL, _("-"), wxDefaultPosition, wxSize(40, -1), 0 );
    itemFlatButton21->SetValue(false);
    itemBoxSizer19->Add(itemFlatButton21, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText22 = new wxStaticText( itemPanel16, wxID_STATIC, _("Order :"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer19->Add(itemStaticText22, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxArrayString m_DLGPS_Scale_Order_ChoiceStrings;
    m_DLGPS_Scale_Order_ChoiceStrings.Add(_("User defined"));
    m_DLGPS_Scale_Order_ChoiceStrings.Add(_("Sort ascending"));
    m_DLGPS_Scale_Order_ChoiceStrings.Add(_("Sort descending"));
    m_DLGPS_Scale_Order_Choice = new wxChoice( itemPanel16, ID_DLGPS_SCALE_ORDER_CHOICE, wxDefaultPosition, wxDefaultSize, m_DLGPS_Scale_Order_ChoiceStrings, 0 );
    m_DLGPS_Scale_Order_Choice->SetStringSelection(_("User defined"));
    itemBoxSizer19->Add(m_DLGPS_Scale_Order_Choice, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    m_DLGPS_Notebook->AddPage(itemPanel16, _("Scale"));

    itemBoxSizer2->Add(m_DLGPS_Notebook, 1, wxGROW|wxALL, 5);

    wxStaticLine* itemStaticLine24 = new wxStaticLine( itemDialog1, wxID_STATIC, wxDefaultPosition, wxDefaultSize, wxLI_HORIZONTAL );
    itemBoxSizer2->Add(itemStaticLine24, 0, wxGROW|wxALL, 5);

    wxStdDialogButtonSizer* itemStdDialogButtonSizer25 = new wxStdDialogButtonSizer;

    itemBoxSizer2->Add(itemStdDialogButtonSizer25, 0, wxALIGN_RIGHT|wxALL, 5);
    wxButton* itemButton26 = new wxButton( itemDialog1, wxID_CANCEL, _("&Cancel"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer25->AddButton(itemButton26);

    wxButton* itemButton27 = new wxButton( itemDialog1, wxID_SAVE, _("&Save"), wxDefaultPosition, wxDefaultSize, 0 );
    itemButton27->SetDefault();
    itemStdDialogButtonSizer25->AddButton(itemButton27);

    itemStdDialogButtonSizer25->Realize();

////@end ProjectPropertiesDLG content construction
}


/*!
 * Should we show tooltips?
 */

bool ProjectPropertiesDLG::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap ProjectPropertiesDLG::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin ProjectPropertiesDLG bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end ProjectPropertiesDLG bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon ProjectPropertiesDLG::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin ProjectPropertiesDLG icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end ProjectPropertiesDLG icon retrieval
}
